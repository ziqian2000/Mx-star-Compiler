- {case: ./basic-package/basic-25.mx, stage: semantic, stderr: '', stdout: '', verdict: Wrong
    Answer}
- {case: ./basic-package/basic-40.mx, stage: semantic, stderr: "line 2:4 mismatched\
    \ input 'void' expecting {'{', '}', '(', '++', '--', '+', '-', '!', '~', 'int',\
    \ 'bool', 'string', 'if', 'for', 'while', 'break', 'continue', 'return', 'new',\
    \ 'this', IntegerConstant, StringConstant, NullConstant, BoolConstant, Identifier}\n\
    line 2:8 mismatched input '[' expecting Identifier\nException in thread \"main\"\
    \ java.lang.NullPointerException\n\tat Compiler.SemanticAnalysis.ASTBuilder.visitFunctionDecl(ASTBuilder.java:49)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitFunctionDecl(ASTBuilder.java:12)\n\
    \tat Compiler.Parser.MxstarParser$FunctionDeclContext.accept(MxstarParser.java:328)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitDeclaration(ASTBuilder.java:28)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitDeclaration(ASTBuilder.java:12)\n\
    \tat Compiler.Parser.MxstarParser$DeclarationContext.accept(MxstarParser.java:185)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitProgram(ASTBuilder.java:18)\n\t\
    at Compiler.SemanticAnalysis.ASTBuilder.visitProgram(ASTBuilder.java:12)\n\tat\
    \ Compiler.Parser.MxstarParser$ProgramContext.accept(MxstarParser.java:130)\n\t\
    at org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.Main.main(Main.java:25)\n", stdout: '', verdict: Accepted}
- {case: ./basic-package/basic-11.mx, stage: semantic, stderr: '', stdout: '', verdict: Accepted}
- {case: ./basic-package/basic-50.mx, stage: semantic, stderr: '', stdout: '', verdict: Wrong
    Answer}
- {case: ./basic-package/basic-4.mx, stage: semantic, stderr: '', stdout: '', verdict: Wrong
    Answer}
- {case: ./basic-package/basic-64.mx, stage: semantic, stderr: "Exception in thread\
    \ \"main\" java.lang.NullPointerException\n\tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitForStmt(ASTBuilder.java:156)\n\t\
    at Compiler.SemanticAnalysis.ASTBuilder.visitForStmt(ASTBuilder.java:12)\n\tat\
    \ Compiler.Parser.MxstarParser$ForStmtContext.accept(MxstarParser.java:1181)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitControlStmt(ASTBuilder.java:136)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitControlStmt(ASTBuilder.java:12)\n\
    \tat Compiler.Parser.MxstarParser$ControlStmtContext.accept(MxstarParser.java:984)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitCompoundStmt(ASTBuilder.java:142)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitCompoundStmt(ASTBuilder.java:12)\n\
    \tat Compiler.Parser.MxstarParser$CompoundStmtContext.accept(MxstarParser.java:1056)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitBlockStmt(ASTBuilder.java:124)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitBlockStmt(ASTBuilder.java:12)\n\
    \tat Compiler.Parser.MxstarParser$BlockStmtContext.accept(MxstarParser.java:973)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitIfStmt(ASTBuilder.java:151)\n\t\
    at Compiler.SemanticAnalysis.ASTBuilder.visitIfStmt(ASTBuilder.java:12)\n\tat\
    \ Compiler.Parser.MxstarParser$IfStmtContext.accept(MxstarParser.java:1136)\n\t\
    at org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitControlStmt(ASTBuilder.java:136)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitControlStmt(ASTBuilder.java:12)\n\
    \tat Compiler.Parser.MxstarParser$ControlStmtContext.accept(MxstarParser.java:984)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitCompoundStmt(ASTBuilder.java:142)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitCompoundStmt(ASTBuilder.java:12)\n\
    \tat Compiler.Parser.MxstarParser$CompoundStmtContext.accept(MxstarParser.java:1056)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitFunctionDecl(ASTBuilder.java:51)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitFunctionDecl(ASTBuilder.java:12)\n\
    \tat Compiler.Parser.MxstarParser$FunctionDeclContext.accept(MxstarParser.java:328)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitDeclaration(ASTBuilder.java:28)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitDeclaration(ASTBuilder.java:12)\n\
    \tat Compiler.Parser.MxstarParser$DeclarationContext.accept(MxstarParser.java:185)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitProgram(ASTBuilder.java:18)\n\t\
    at Compiler.SemanticAnalysis.ASTBuilder.visitProgram(ASTBuilder.java:12)\n\tat\
    \ Compiler.Parser.MxstarParser$ProgramContext.accept(MxstarParser.java:130)\n\t\
    at org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.Main.main(Main.java:25)\n", stdout: '', verdict: Wrong Answer}
- {case: ./basic-package/basic-35.mx, stage: semantic, stderr: '', stdout: '', verdict: Wrong
    Answer}
- {case: ./basic-package/basic-15.mx, stage: semantic, stderr: '', stdout: '', verdict: Wrong
    Answer}
- {case: ./basic-package/basic-44.mx, stage: semantic, stderr: '', stdout: '', verdict: Accepted}
- {case: ./basic-package/basic-70.mx, stage: semantic, stderr: 'line 2:27 mismatched
    input '']'' expecting {''('', ''++'', ''--'', ''+'', ''-'', ''!'', ''~'', ''new'',
    ''this'', IntegerConstant, StringConstant, NullConstant, BoolConstant, Identifier}

    ', stdout: '', verdict: Wrong Answer}
- {case: ./basic-package/basic-21.mx, stage: semantic, stderr: '', stdout: '', verdict: Wrong
    Answer}
- {case: ./basic-package/basic-31.mx, stage: semantic, stderr: '', stdout: '', verdict: Wrong
    Answer}
- {case: ./basic-package/basic-60.mx, stage: semantic, stderr: '', stdout: '', verdict: Accepted}
- {case: ./basic-package/basic-54.mx, stage: semantic, stderr: '', stdout: '', verdict: Wrong
    Answer}
- {case: ./basic-package/basic-14.mx, stage: semantic, stderr: '', stdout: '', verdict: Wrong
    Answer}
- {case: ./basic-package/basic-45.mx, stage: semantic, stderr: 'line 2:8 mismatched
    input ''void'' expecting {''int'', ''bool'', ''string'', Identifier}

    ', stdout: '', verdict: Wrong Answer}
- {case: ./basic-package/basic-20.mx, stage: semantic, stderr: '', stdout: '', verdict: Wrong
    Answer}
- {case: ./basic-package/basic-30.mx, stage: semantic, stderr: '', stdout: '', verdict: Wrong
    Answer}
- {case: ./basic-package/basic-61.mx, stage: semantic, stderr: '', stdout: '', verdict: Wrong
    Answer}
- {case: ./basic-package/basic-55.mx, stage: semantic, stderr: '', stdout: '', verdict: Accepted}
- {case: ./basic-package/basic-1.mx, stage: semantic, stderr: '', stdout: '', verdict: Accepted}
- {case: ./basic-package/basic-24.mx, stage: semantic, stderr: '', stdout: '', verdict: Wrong
    Answer}
- {case: ./basic-package/basic-41.mx, stage: semantic, stderr: '', stdout: '', verdict: Accepted}
- {case: ./basic-package/basic-10.mx, stage: semantic, stderr: '', stdout: '', verdict: Accepted}
- {case: ./basic-package/basic-51.mx, stage: semantic, stderr: '', stdout: '', verdict: Wrong
    Answer}
- {case: ./basic-package/basic-5.mx, stage: semantic, stderr: "line 3:1 extraneous\
    \ input 'void' expecting {'{', '}', '(', '++', '--', '+', '-', '!', '~', 'int',\
    \ 'bool', 'string', 'if', 'for', 'while', 'break', 'continue', 'return', 'new',\
    \ 'this', IntegerConstant, StringConstant, NullConstant, BoolConstant, Identifier}\n\
    line 4:1 extraneous input 'void' expecting {'{', '}', '(', '++', '--', '+', '-',\
    \ '!', '~', 'int', 'bool', 'string', 'if', 'for', 'while', 'break', 'continue',\
    \ 'return', 'new', 'this', IntegerConstant, StringConstant, NullConstant, BoolConstant,\
    \ Identifier}\nline 4:7 mismatched input ';' expecting {'(', ';', '=', '[', '.',\
    \ '++', '--', '+', '-', '*', '/', '%', '<<', '>>', '<', '>', '<=', '>=', '==',\
    \ '!=', '&', '^', '|', '&&', '||'}\nException in thread \"main\" java.lang.NullPointerException\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitFunctionDecl(ASTBuilder.java:51)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitFunctionDecl(ASTBuilder.java:12)\n\
    \tat Compiler.Parser.MxstarParser$FunctionDeclContext.accept(MxstarParser.java:328)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitDeclaration(ASTBuilder.java:28)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitDeclaration(ASTBuilder.java:12)\n\
    \tat Compiler.Parser.MxstarParser$DeclarationContext.accept(MxstarParser.java:185)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitProgram(ASTBuilder.java:18)\n\t\
    at Compiler.SemanticAnalysis.ASTBuilder.visitProgram(ASTBuilder.java:12)\n\tat\
    \ Compiler.Parser.MxstarParser$ProgramContext.accept(MxstarParser.java:130)\n\t\
    at org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.Main.main(Main.java:25)\n", stdout: '', verdict: Accepted}
- {case: ./basic-package/basic-65.mx, stage: semantic, stderr: '', stdout: '', verdict: Accepted}
- {case: ./basic-package/basic-34.mx, stage: semantic, stderr: '', stdout: '', verdict: Wrong
    Answer}
- {case: ./basic-package/basic-46.mx, stage: semantic, stderr: 'line 10:4 extraneous
    input ''void'' expecting {''{'', ''}'', ''('', ''++'', ''--'', ''+'', ''-'', ''!'',
    ''~'', ''int'', ''bool'', ''string'', ''if'', ''for'', ''while'', ''break'', ''continue'',
    ''return'', ''new'', ''this'', IntegerConstant, StringConstant, NullConstant,
    BoolConstant, Identifier}

    ', stdout: '', verdict: Wrong Answer}
- {case: ./basic-package/basic-17.mx, stage: semantic, stderr: '', stdout: '', verdict: Accepted}
- {case: ./basic-package/basic-23.mx, stage: semantic, stderr: 'line 2:4 extraneous
    input ''void'' expecting {''{'', ''}'', ''('', ''++'', ''--'', ''+'', ''-'', ''!'',
    ''~'', ''int'', ''bool'', ''string'', ''if'', ''for'', ''while'', ''break'', ''continue'',
    ''return'', ''new'', ''this'', IntegerConstant, StringConstant, NullConstant,
    BoolConstant, Identifier}

    ', stdout: '', verdict: Wrong Answer}
- {case: ./basic-package/basic-62.mx, stage: semantic, stderr: '', stdout: '', verdict: Accepted}
- {case: ./basic-package/basic-33.mx, stage: semantic, stderr: '', stdout: '', verdict: Wrong
    Answer}
- {case: ./basic-package/basic-2.mx, stage: semantic, stderr: '', stdout: '', verdict: Accepted}
- {case: ./basic-package/basic-56.mx, stage: semantic, stderr: '', stdout: '', verdict: Accepted}
- {case: ./basic-package/basic-27.mx, stage: semantic, stderr: '', stdout: '', verdict: Wrong
    Answer}
- {case: ./basic-package/basic-13.mx, stage: semantic, stderr: '', stdout: '', verdict: Wrong
    Answer}
- {case: ./basic-package/basic-42.mx, stage: semantic, stderr: '', stdout: '', verdict: Wrong
    Answer}
- {case: ./basic-package/basic-6.mx, stage: semantic, stderr: '', stdout: '', verdict: Wrong
    Answer}
- {case: ./basic-package/basic-52.mx, stage: semantic, stderr: '', stdout: '', verdict: Wrong
    Answer}
- {case: ./basic-package/basic-71.mx, stage: semantic, stderr: '', stdout: '', verdict: Accepted}
- {case: ./basic-package/basic-37.mx, stage: semantic, stderr: '', stdout: '', verdict: Wrong
    Answer}
- {case: ./basic-package/basic-66.mx, stage: semantic, stderr: '', stdout: '', verdict: Accepted}
- {case: ./basic-package/basic-26.mx, stage: semantic, stderr: '', stdout: '', verdict: Wrong
    Answer}
- {case: ./basic-package/basic-12.mx, stage: semantic, stderr: '', stdout: '', verdict: Wrong
    Answer}
- {case: ./basic-package/basic-43.mx, stage: semantic, stderr: '', stdout: '', verdict: Wrong
    Answer}
- {case: ./basic-package/basic-7.mx, stage: semantic, stderr: '', stdout: '', verdict: Wrong
    Answer}
- {case: ./basic-package/basic-53.mx, stage: semantic, stderr: '', stdout: '', verdict: Accepted}
- {case: ./basic-package/basic-36.mx, stage: semantic, stderr: 'line 19:227 mismatched
    input '']'' expecting {''('', ''++'', ''--'', ''+'', ''-'', ''!'', ''~'', ''new'',
    ''this'', IntegerConstant, StringConstant, NullConstant, BoolConstant, Identifier}

    line 19:229 mismatched input '']'' expecting {''('', ''++'', ''--'', ''+'', ''-'',
    ''!'', ''~'', ''new'', ''this'', IntegerConstant, StringConstant, NullConstant,
    BoolConstant, Identifier}

    line 19:231 mismatched input '']'' expecting {''('', ''++'', ''--'', ''+'', ''-'',
    ''!'', ''~'', ''new'', ''this'', IntegerConstant, StringConstant, NullConstant,
    BoolConstant, Identifier}

    ', stdout: '', verdict: Wrong Answer}
- {case: ./basic-package/basic-67.mx, stage: semantic, stderr: "Exception in thread\
    \ \"main\" java.lang.ClassCastException: class Compiler.AST.IdExprNode cannot\
    \ be cast to class Compiler.AST.UnaryExprNode (Compiler.AST.IdExprNode and Compiler.AST.UnaryExprNode\
    \ are in unnamed module of loader 'app')\n\tat Compiler.SemanticAnalysis.ASTBuilder.visitUnaryOpExpr(ASTBuilder.java:252)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitUnaryOpExpr(ASTBuilder.java:12)\n\
    \tat Compiler.Parser.MxstarParser$UnaryOpExprContext.accept(MxstarParser.java:1474)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitSubExpr(ASTBuilder.java:205)\n\t\
    at Compiler.SemanticAnalysis.ASTBuilder.visitSubExpr(ASTBuilder.java:12)\n\tat\
    \ Compiler.Parser.MxstarParser$SubExprContext.accept(MxstarParser.java:1421)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitUnaryOpExpr(ASTBuilder.java:252)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitUnaryOpExpr(ASTBuilder.java:12)\n\
    \tat Compiler.Parser.MxstarParser$UnaryOpExprContext.accept(MxstarParser.java:1474)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitSubExpr(ASTBuilder.java:205)\n\t\
    at Compiler.SemanticAnalysis.ASTBuilder.visitSubExpr(ASTBuilder.java:12)\n\tat\
    \ Compiler.Parser.MxstarParser$SubExprContext.accept(MxstarParser.java:1421)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitPostfixOpExpr(ASTBuilder.java:241)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitPostfixOpExpr(ASTBuilder.java:12)\n\
    \tat Compiler.Parser.MxstarParser$PostfixOpExprContext.accept(MxstarParser.java:1462)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitSubExpr(ASTBuilder.java:205)\n\t\
    at Compiler.SemanticAnalysis.ASTBuilder.visitSubExpr(ASTBuilder.java:12)\n\tat\
    \ Compiler.Parser.MxstarParser$SubExprContext.accept(MxstarParser.java:1421)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitPostfixOpExpr(ASTBuilder.java:241)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitPostfixOpExpr(ASTBuilder.java:12)\n\
    \tat Compiler.Parser.MxstarParser$PostfixOpExprContext.accept(MxstarParser.java:1462)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitSubExpr(ASTBuilder.java:205)\n\t\
    at Compiler.SemanticAnalysis.ASTBuilder.visitSubExpr(ASTBuilder.java:12)\n\tat\
    \ Compiler.Parser.MxstarParser$SubExprContext.accept(MxstarParser.java:1421)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitUnaryOpExpr(ASTBuilder.java:252)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitUnaryOpExpr(ASTBuilder.java:12)\n\
    \tat Compiler.Parser.MxstarParser$UnaryOpExprContext.accept(MxstarParser.java:1474)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitSubExpr(ASTBuilder.java:205)\n\t\
    at Compiler.SemanticAnalysis.ASTBuilder.visitSubExpr(ASTBuilder.java:12)\n\tat\
    \ Compiler.Parser.MxstarParser$SubExprContext.accept(MxstarParser.java:1421)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitPostfixOpExpr(ASTBuilder.java:241)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitPostfixOpExpr(ASTBuilder.java:12)\n\
    \tat Compiler.Parser.MxstarParser$PostfixOpExprContext.accept(MxstarParser.java:1462)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitSubExpr(ASTBuilder.java:205)\n\t\
    at Compiler.SemanticAnalysis.ASTBuilder.visitSubExpr(ASTBuilder.java:12)\n\tat\
    \ Compiler.Parser.MxstarParser$SubExprContext.accept(MxstarParser.java:1421)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitPostfixOpExpr(ASTBuilder.java:241)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitPostfixOpExpr(ASTBuilder.java:12)\n\
    \tat Compiler.Parser.MxstarParser$PostfixOpExprContext.accept(MxstarParser.java:1462)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitSubExpr(ASTBuilder.java:205)\n\t\
    at Compiler.SemanticAnalysis.ASTBuilder.visitSubExpr(ASTBuilder.java:12)\n\tat\
    \ Compiler.Parser.MxstarParser$SubExprContext.accept(MxstarParser.java:1421)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitUnaryOpExpr(ASTBuilder.java:252)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitUnaryOpExpr(ASTBuilder.java:12)\n\
    \tat Compiler.Parser.MxstarParser$UnaryOpExprContext.accept(MxstarParser.java:1474)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitExprStmt(ASTBuilder.java:132)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitExprStmt(ASTBuilder.java:12)\n\t\
    at Compiler.Parser.MxstarParser$ExprStmtContext.accept(MxstarParser.java:951)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitCompoundStmt(ASTBuilder.java:142)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitCompoundStmt(ASTBuilder.java:12)\n\
    \tat Compiler.Parser.MxstarParser$CompoundStmtContext.accept(MxstarParser.java:1056)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitFunctionDecl(ASTBuilder.java:51)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitFunctionDecl(ASTBuilder.java:12)\n\
    \tat Compiler.Parser.MxstarParser$FunctionDeclContext.accept(MxstarParser.java:328)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitDeclaration(ASTBuilder.java:28)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitDeclaration(ASTBuilder.java:12)\n\
    \tat Compiler.Parser.MxstarParser$DeclarationContext.accept(MxstarParser.java:185)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitProgram(ASTBuilder.java:18)\n\t\
    at Compiler.SemanticAnalysis.ASTBuilder.visitProgram(ASTBuilder.java:12)\n\tat\
    \ Compiler.Parser.MxstarParser$ProgramContext.accept(MxstarParser.java:130)\n\t\
    at org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.Main.main(Main.java:25)\n", stdout: '', verdict: Accepted}
- {case: ./basic-package/basic-47.mx, stage: semantic, stderr: '', stdout: '', verdict: Accepted}
- {case: ./basic-package/basic-16.mx, stage: semantic, stderr: '', stdout: '', verdict: Wrong
    Answer}
- {case: ./basic-package/basic-22.mx, stage: semantic, stderr: '', stdout: '', verdict: Wrong
    Answer}
- {case: ./basic-package/basic-63.mx, stage: semantic, stderr: '', stdout: '', verdict: Accepted}
- {case: ./basic-package/basic-32.mx, stage: semantic, stderr: '', stdout: '', verdict: Wrong
    Answer}
- {case: ./basic-package/basic-3.mx, stage: semantic, stderr: "Exception in thread\
    \ \"main\" java.lang.ClassCastException: class Compiler.AST.IdExprNode cannot\
    \ be cast to class Compiler.AST.UnaryExprNode (Compiler.AST.IdExprNode and Compiler.AST.UnaryExprNode\
    \ are in unnamed module of loader 'app')\n\tat Compiler.SemanticAnalysis.ASTBuilder.visitUnaryOpExpr(ASTBuilder.java:252)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitUnaryOpExpr(ASTBuilder.java:12)\n\
    \tat Compiler.Parser.MxstarParser$UnaryOpExprContext.accept(MxstarParser.java:1474)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitForStmt(ASTBuilder.java:158)\n\t\
    at Compiler.SemanticAnalysis.ASTBuilder.visitForStmt(ASTBuilder.java:12)\n\tat\
    \ Compiler.Parser.MxstarParser$ForStmtContext.accept(MxstarParser.java:1181)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitControlStmt(ASTBuilder.java:136)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitControlStmt(ASTBuilder.java:12)\n\
    \tat Compiler.Parser.MxstarParser$ControlStmtContext.accept(MxstarParser.java:984)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitCompoundStmt(ASTBuilder.java:142)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitCompoundStmt(ASTBuilder.java:12)\n\
    \tat Compiler.Parser.MxstarParser$CompoundStmtContext.accept(MxstarParser.java:1056)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitFunctionDecl(ASTBuilder.java:51)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitFunctionDecl(ASTBuilder.java:12)\n\
    \tat Compiler.Parser.MxstarParser$FunctionDeclContext.accept(MxstarParser.java:328)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitDeclaration(ASTBuilder.java:28)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitDeclaration(ASTBuilder.java:12)\n\
    \tat Compiler.Parser.MxstarParser$DeclarationContext.accept(MxstarParser.java:185)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitProgram(ASTBuilder.java:18)\n\t\
    at Compiler.SemanticAnalysis.ASTBuilder.visitProgram(ASTBuilder.java:12)\n\tat\
    \ Compiler.Parser.MxstarParser$ProgramContext.accept(MxstarParser.java:130)\n\t\
    at org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.Main.main(Main.java:25)\n", stdout: '', verdict: Wrong Answer}
- {case: ./basic-package/basic-57.mx, stage: semantic, stderr: 'line 2:4 missing ''{''
    at ''int''

    line 3:4 missing '';'' at ''"I think I forget some thing...;\n    print("''

    line 4:11 missing '';'' at ''but''

    line 4:18 missing '';'' at ''seems''

    line 4:27 missing '';'' at ''be''

    line 4:39 token recognition error at: ''")\n}''

    line 4:34 missing '';'' at ''right''

    ', stdout: '', verdict: Wrong Answer}
- {case: ./basic-package/basic-29.mx, stage: semantic, stderr: '', stdout: '', verdict: Wrong
    Answer}
- {case: ./basic-package/basic-68.mx, stage: semantic, stderr: '', stdout: '', verdict: Wrong
    Answer}
- {case: ./basic-package/basic-39.mx, stage: semantic, stderr: '', stdout: '', verdict: Wrong
    Answer}
- {case: ./basic-package/basic-8.mx, stage: semantic, stderr: 'line 3:10 mismatched
    input ''this'' expecting Identifier

    ', stdout: '', verdict: Wrong Answer}
- {case: ./basic-package/basic-19.mx, stage: semantic, stderr: '', stdout: '', verdict: Wrong
    Answer}
- {case: ./basic-package/basic-48.mx, stage: semantic, stderr: '', stdout: '', verdict: Wrong
    Answer}
- {case: ./basic-package/basic-58.mx, stage: semantic, stderr: '', stdout: '', verdict: Wrong
    Answer}
- {case: ./basic-package/basic-18.mx, stage: semantic, stderr: '', stdout: '', verdict: Accepted}
- {case: ./basic-package/basic-49.mx, stage: semantic, stderr: '', stdout: '', verdict: Accepted}
- {case: ./basic-package/basic-59.mx, stage: semantic, stderr: '', stdout: '', verdict: Accepted}
- {case: ./basic-package/basic-28.mx, stage: semantic, stderr: '', stdout: '', verdict: Accepted}
- {case: ./basic-package/basic-69.mx, stage: semantic, stderr: '', stdout: '', verdict: Accepted}
- {case: ./basic-package/basic-38.mx, stage: semantic, stderr: "line 1:6 mismatched\
    \ input 'int' expecting Identifier\nException in thread \"main\" java.lang.NullPointerException\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitClassDecl(ASTBuilder.java:34)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitClassDecl(ASTBuilder.java:12)\n\
    \tat Compiler.Parser.MxstarParser$ClassDeclContext.accept(MxstarParser.java:252)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitDeclaration(ASTBuilder.java:27)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitDeclaration(ASTBuilder.java:12)\n\
    \tat Compiler.Parser.MxstarParser$DeclarationContext.accept(MxstarParser.java:185)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitProgram(ASTBuilder.java:18)\n\t\
    at Compiler.SemanticAnalysis.ASTBuilder.visitProgram(ASTBuilder.java:12)\n\tat\
    \ Compiler.Parser.MxstarParser$ProgramContext.accept(MxstarParser.java:130)\n\t\
    at org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.Main.main(Main.java:25)\n", stdout: '', verdict: Accepted}
- {case: ./basic-package/basic-9.mx, stage: semantic, stderr: '', stdout: '', verdict: Wrong
    Answer}
- {case: ./builtin-func-package/builtin-4.mx, stage: semantic, stderr: '', stdout: '',
  verdict: Wrong Answer}
- {case: ./builtin-func-package/builtin-1.mx, stage: semantic, stderr: '', stdout: '',
  verdict: Accepted}
- {case: ./builtin-func-package/builtin-2.mx, stage: semantic, stderr: '', stdout: '',
  verdict: Accepted}
- {case: ./builtin-func-package/builtin-3.mx, stage: semantic, stderr: '', stdout: '',
  verdict: Wrong Answer}
- {case: ./if-package/if-3.mx, stage: semantic, stderr: '', stdout: '', verdict: Wrong
    Answer}
- {case: ./if-package/if-2.mx, stage: semantic, stderr: '', stdout: '', verdict: Wrong
    Answer}
- {case: ./if-package/if-1.mx, stage: semantic, stderr: '', stdout: '', verdict: Wrong
    Answer}
- {case: ./breakcontinue-package/breakcontinue-3.mx, stage: semantic, stderr: '',
  stdout: '', verdict: Accepted}
- {case: ./breakcontinue-package/breakcontinue-2.mx, stage: semantic, stderr: '',
  stdout: '', verdict: Wrong Answer}
- {case: ./breakcontinue-package/breakcontinue-1.mx, stage: semantic, stderr: '',
  stdout: '', verdict: Wrong Answer}
- {case: ./breakcontinue-package/breakcontinue-5.mx, stage: semantic, stderr: "Exception\
    \ in thread \"main\" java.lang.ClassCastException: class Compiler.AST.IdExprNode\
    \ cannot be cast to class Compiler.AST.UnaryExprNode (Compiler.AST.IdExprNode\
    \ and Compiler.AST.UnaryExprNode are in unnamed module of loader 'app')\n\tat\
    \ Compiler.SemanticAnalysis.ASTBuilder.visitUnaryOpExpr(ASTBuilder.java:252)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitUnaryOpExpr(ASTBuilder.java:12)\n\
    \tat Compiler.Parser.MxstarParser$UnaryOpExprContext.accept(MxstarParser.java:1474)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitForStmt(ASTBuilder.java:158)\n\t\
    at Compiler.SemanticAnalysis.ASTBuilder.visitForStmt(ASTBuilder.java:12)\n\tat\
    \ Compiler.Parser.MxstarParser$ForStmtContext.accept(MxstarParser.java:1181)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitControlStmt(ASTBuilder.java:136)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitControlStmt(ASTBuilder.java:12)\n\
    \tat Compiler.Parser.MxstarParser$ControlStmtContext.accept(MxstarParser.java:984)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitCompoundStmt(ASTBuilder.java:142)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitCompoundStmt(ASTBuilder.java:12)\n\
    \tat Compiler.Parser.MxstarParser$CompoundStmtContext.accept(MxstarParser.java:1056)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitFunctionDecl(ASTBuilder.java:51)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitFunctionDecl(ASTBuilder.java:12)\n\
    \tat Compiler.Parser.MxstarParser$FunctionDeclContext.accept(MxstarParser.java:328)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitDeclaration(ASTBuilder.java:28)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitDeclaration(ASTBuilder.java:12)\n\
    \tat Compiler.Parser.MxstarParser$DeclarationContext.accept(MxstarParser.java:185)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitProgram(ASTBuilder.java:18)\n\t\
    at Compiler.SemanticAnalysis.ASTBuilder.visitProgram(ASTBuilder.java:12)\n\tat\
    \ Compiler.Parser.MxstarParser$ProgramContext.accept(MxstarParser.java:130)\n\t\
    at org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.Main.main(Main.java:25)\n", stdout: '', verdict: Accepted}
- {case: ./breakcontinue-package/breakcontinue-4.mx, stage: semantic, stderr: '',
  stdout: '', verdict: Wrong Answer}
- {case: ./expression-package/expression-5.mx, stage: semantic, stderr: '', stdout: '',
  verdict: Wrong Answer}
- {case: ./expression-package/expression-1.mx, stage: semantic, stderr: '', stdout: '',
  verdict: Wrong Answer}
- {case: ./expression-package/expression-4.mx, stage: semantic, stderr: '', stdout: '',
  verdict: Wrong Answer}
- {case: ./expression-package/expression-3.mx, stage: semantic, stderr: "Exception\
    \ in thread \"main\" java.lang.ClassCastException: class Compiler.AST.BinaryExprNode\
    \ cannot be cast to class Compiler.AST.UnaryExprNode (Compiler.AST.BinaryExprNode\
    \ and Compiler.AST.UnaryExprNode are in unnamed module of loader 'app')\n\tat\
    \ Compiler.SemanticAnalysis.ASTBuilder.visitUnaryOpExpr(ASTBuilder.java:252)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitUnaryOpExpr(ASTBuilder.java:12)\n\
    \tat Compiler.Parser.MxstarParser$UnaryOpExprContext.accept(MxstarParser.java:1474)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitBinaryExpr(ASTBuilder.java:209)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitBinaryExpr(ASTBuilder.java:12)\n\
    \tat Compiler.Parser.MxstarParser$BinaryExprContext.accept(MxstarParser.java:1438)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitBinaryExpr(ASTBuilder.java:209)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitBinaryExpr(ASTBuilder.java:12)\n\
    \tat Compiler.Parser.MxstarParser$BinaryExprContext.accept(MxstarParser.java:1438)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitWhileStmt(ASTBuilder.java:164)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitWhileStmt(ASTBuilder.java:12)\n\
    \tat Compiler.Parser.MxstarParser$WhileStmtContext.accept(MxstarParser.java:1151)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitControlStmt(ASTBuilder.java:136)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitControlStmt(ASTBuilder.java:12)\n\
    \tat Compiler.Parser.MxstarParser$ControlStmtContext.accept(MxstarParser.java:984)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitCompoundStmt(ASTBuilder.java:142)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitCompoundStmt(ASTBuilder.java:12)\n\
    \tat Compiler.Parser.MxstarParser$CompoundStmtContext.accept(MxstarParser.java:1056)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitFunctionDecl(ASTBuilder.java:51)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitFunctionDecl(ASTBuilder.java:12)\n\
    \tat Compiler.Parser.MxstarParser$FunctionDeclContext.accept(MxstarParser.java:328)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitDeclaration(ASTBuilder.java:28)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitDeclaration(ASTBuilder.java:12)\n\
    \tat Compiler.Parser.MxstarParser$DeclarationContext.accept(MxstarParser.java:185)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitProgram(ASTBuilder.java:18)\n\t\
    at Compiler.SemanticAnalysis.ASTBuilder.visitProgram(ASTBuilder.java:12)\n\tat\
    \ Compiler.Parser.MxstarParser$ProgramContext.accept(MxstarParser.java:130)\n\t\
    at org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.Main.main(Main.java:25)\n", stdout: '', verdict: Wrong Answer}
- {case: ./expression-package/expression-2.mx, stage: semantic, stderr: "Exception\
    \ in thread \"main\" java.lang.ClassCastException: class Compiler.AST.IdExprNode\
    \ cannot be cast to class Compiler.AST.UnaryExprNode (Compiler.AST.IdExprNode\
    \ and Compiler.AST.UnaryExprNode are in unnamed module of loader 'app')\n\tat\
    \ Compiler.SemanticAnalysis.ASTBuilder.visitUnaryOpExpr(ASTBuilder.java:252)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitUnaryOpExpr(ASTBuilder.java:12)\n\
    \tat Compiler.Parser.MxstarParser$UnaryOpExprContext.accept(MxstarParser.java:1474)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitUnaryOpExpr(ASTBuilder.java:252)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitUnaryOpExpr(ASTBuilder.java:12)\n\
    \tat Compiler.Parser.MxstarParser$UnaryOpExprContext.accept(MxstarParser.java:1474)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitExprStmt(ASTBuilder.java:132)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitExprStmt(ASTBuilder.java:12)\n\t\
    at Compiler.Parser.MxstarParser$ExprStmtContext.accept(MxstarParser.java:951)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitCompoundStmt(ASTBuilder.java:142)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitCompoundStmt(ASTBuilder.java:12)\n\
    \tat Compiler.Parser.MxstarParser$CompoundStmtContext.accept(MxstarParser.java:1056)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitFunctionDecl(ASTBuilder.java:51)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitFunctionDecl(ASTBuilder.java:12)\n\
    \tat Compiler.Parser.MxstarParser$FunctionDeclContext.accept(MxstarParser.java:328)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitDeclaration(ASTBuilder.java:28)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitDeclaration(ASTBuilder.java:12)\n\
    \tat Compiler.Parser.MxstarParser$DeclarationContext.accept(MxstarParser.java:185)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitProgram(ASTBuilder.java:18)\n\t\
    at Compiler.SemanticAnalysis.ASTBuilder.visitProgram(ASTBuilder.java:12)\n\tat\
    \ Compiler.Parser.MxstarParser$ProgramContext.accept(MxstarParser.java:130)\n\t\
    at org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.Main.main(Main.java:25)\n", stdout: '', verdict: Wrong Answer}
- {case: ./array-package/array-7.mx, stage: semantic, stderr: "Exception in thread\
    \ \"main\" java.lang.ClassCastException: class Compiler.AST.ArrayIdxExprNode cannot\
    \ be cast to class Compiler.AST.UnaryExprNode (Compiler.AST.ArrayIdxExprNode and\
    \ Compiler.AST.UnaryExprNode are in unnamed module of loader 'app')\n\tat Compiler.SemanticAnalysis.ASTBuilder.visitUnaryOpExpr(ASTBuilder.java:252)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitUnaryOpExpr(ASTBuilder.java:12)\n\
    \tat Compiler.Parser.MxstarParser$UnaryOpExprContext.accept(MxstarParser.java:1474)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitExprStmt(ASTBuilder.java:132)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitExprStmt(ASTBuilder.java:12)\n\t\
    at Compiler.Parser.MxstarParser$ExprStmtContext.accept(MxstarParser.java:951)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitIfStmt(ASTBuilder.java:150)\n\t\
    at Compiler.SemanticAnalysis.ASTBuilder.visitIfStmt(ASTBuilder.java:12)\n\tat\
    \ Compiler.Parser.MxstarParser$IfStmtContext.accept(MxstarParser.java:1136)\n\t\
    at org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitControlStmt(ASTBuilder.java:136)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitControlStmt(ASTBuilder.java:12)\n\
    \tat Compiler.Parser.MxstarParser$ControlStmtContext.accept(MxstarParser.java:984)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitCompoundStmt(ASTBuilder.java:142)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitCompoundStmt(ASTBuilder.java:12)\n\
    \tat Compiler.Parser.MxstarParser$CompoundStmtContext.accept(MxstarParser.java:1056)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitFunctionDecl(ASTBuilder.java:51)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitFunctionDecl(ASTBuilder.java:12)\n\
    \tat Compiler.Parser.MxstarParser$FunctionDeclContext.accept(MxstarParser.java:328)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitDeclaration(ASTBuilder.java:28)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitDeclaration(ASTBuilder.java:12)\n\
    \tat Compiler.Parser.MxstarParser$DeclarationContext.accept(MxstarParser.java:185)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitProgram(ASTBuilder.java:18)\n\t\
    at Compiler.SemanticAnalysis.ASTBuilder.visitProgram(ASTBuilder.java:12)\n\tat\
    \ Compiler.Parser.MxstarParser$ProgramContext.accept(MxstarParser.java:130)\n\t\
    at org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.Main.main(Main.java:25)\n", stdout: '', verdict: Wrong Answer}
- {case: ./array-package/array-3.mx, stage: semantic, stderr: "Exception in thread\
    \ \"main\" java.lang.ClassCastException: class Compiler.AST.IdExprNode cannot\
    \ be cast to class Compiler.AST.UnaryExprNode (Compiler.AST.IdExprNode and Compiler.AST.UnaryExprNode\
    \ are in unnamed module of loader 'app')\n\tat Compiler.SemanticAnalysis.ASTBuilder.visitUnaryOpExpr(ASTBuilder.java:252)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitUnaryOpExpr(ASTBuilder.java:12)\n\
    \tat Compiler.Parser.MxstarParser$UnaryOpExprContext.accept(MxstarParser.java:1474)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitForStmt(ASTBuilder.java:158)\n\t\
    at Compiler.SemanticAnalysis.ASTBuilder.visitForStmt(ASTBuilder.java:12)\n\tat\
    \ Compiler.Parser.MxstarParser$ForStmtContext.accept(MxstarParser.java:1181)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitControlStmt(ASTBuilder.java:136)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitControlStmt(ASTBuilder.java:12)\n\
    \tat Compiler.Parser.MxstarParser$ControlStmtContext.accept(MxstarParser.java:984)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitCompoundStmt(ASTBuilder.java:142)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitCompoundStmt(ASTBuilder.java:12)\n\
    \tat Compiler.Parser.MxstarParser$CompoundStmtContext.accept(MxstarParser.java:1056)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitFunctionDecl(ASTBuilder.java:51)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitFunctionDecl(ASTBuilder.java:12)\n\
    \tat Compiler.Parser.MxstarParser$FunctionDeclContext.accept(MxstarParser.java:328)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitDeclaration(ASTBuilder.java:28)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitDeclaration(ASTBuilder.java:12)\n\
    \tat Compiler.Parser.MxstarParser$DeclarationContext.accept(MxstarParser.java:185)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitProgram(ASTBuilder.java:18)\n\t\
    at Compiler.SemanticAnalysis.ASTBuilder.visitProgram(ASTBuilder.java:12)\n\tat\
    \ Compiler.Parser.MxstarParser$ProgramContext.accept(MxstarParser.java:130)\n\t\
    at org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.Main.main(Main.java:25)\n", stdout: '', verdict: Accepted}
- {case: ./array-package/array-2.mx, stage: semantic, stderr: "Exception in thread\
    \ \"main\" java.lang.ClassCastException: class Compiler.AST.IdExprNode cannot\
    \ be cast to class Compiler.AST.UnaryExprNode (Compiler.AST.IdExprNode and Compiler.AST.UnaryExprNode\
    \ are in unnamed module of loader 'app')\n\tat Compiler.SemanticAnalysis.ASTBuilder.visitUnaryOpExpr(ASTBuilder.java:252)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitUnaryOpExpr(ASTBuilder.java:12)\n\
    \tat Compiler.Parser.MxstarParser$UnaryOpExprContext.accept(MxstarParser.java:1474)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitForStmt(ASTBuilder.java:158)\n\t\
    at Compiler.SemanticAnalysis.ASTBuilder.visitForStmt(ASTBuilder.java:12)\n\tat\
    \ Compiler.Parser.MxstarParser$ForStmtContext.accept(MxstarParser.java:1181)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitControlStmt(ASTBuilder.java:136)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitControlStmt(ASTBuilder.java:12)\n\
    \tat Compiler.Parser.MxstarParser$ControlStmtContext.accept(MxstarParser.java:984)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitCompoundStmt(ASTBuilder.java:142)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitCompoundStmt(ASTBuilder.java:12)\n\
    \tat Compiler.Parser.MxstarParser$CompoundStmtContext.accept(MxstarParser.java:1056)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitFunctionDecl(ASTBuilder.java:51)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitFunctionDecl(ASTBuilder.java:12)\n\
    \tat Compiler.Parser.MxstarParser$FunctionDeclContext.accept(MxstarParser.java:328)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitDeclaration(ASTBuilder.java:28)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitDeclaration(ASTBuilder.java:12)\n\
    \tat Compiler.Parser.MxstarParser$DeclarationContext.accept(MxstarParser.java:185)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitProgram(ASTBuilder.java:18)\n\t\
    at Compiler.SemanticAnalysis.ASTBuilder.visitProgram(ASTBuilder.java:12)\n\tat\
    \ Compiler.Parser.MxstarParser$ProgramContext.accept(MxstarParser.java:130)\n\t\
    at org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.Main.main(Main.java:25)\n", stdout: '', verdict: Wrong Answer}
- {case: ./array-package/array-6.mx, stage: semantic, stderr: '', stdout: '', verdict: Wrong
    Answer}
- {case: ./array-package/array-9.mx, stage: semantic, stderr: '', stdout: '', verdict: Accepted}
- {case: ./array-package/array-8.mx, stage: semantic, stderr: '', stdout: '', verdict: Wrong
    Answer}
- {case: ./array-package/array-1.mx, stage: semantic, stderr: "Exception in thread\
    \ \"main\" java.lang.ClassCastException: class Compiler.AST.IntConstExprNode cannot\
    \ be cast to class Compiler.AST.UnaryExprNode (Compiler.AST.IntConstExprNode and\
    \ Compiler.AST.UnaryExprNode are in unnamed module of loader 'app')\n\tat Compiler.SemanticAnalysis.ASTBuilder.visitUnaryOpExpr(ASTBuilder.java:252)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitUnaryOpExpr(ASTBuilder.java:12)\n\
    \tat Compiler.Parser.MxstarParser$UnaryOpExprContext.accept(MxstarParser.java:1474)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitBinaryExpr(ASTBuilder.java:209)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitBinaryExpr(ASTBuilder.java:12)\n\
    \tat Compiler.Parser.MxstarParser$BinaryExprContext.accept(MxstarParser.java:1438)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitExprStmt(ASTBuilder.java:132)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitExprStmt(ASTBuilder.java:12)\n\t\
    at Compiler.Parser.MxstarParser$ExprStmtContext.accept(MxstarParser.java:951)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitCompoundStmt(ASTBuilder.java:142)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitCompoundStmt(ASTBuilder.java:12)\n\
    \tat Compiler.Parser.MxstarParser$CompoundStmtContext.accept(MxstarParser.java:1056)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitFunctionDecl(ASTBuilder.java:51)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitFunctionDecl(ASTBuilder.java:12)\n\
    \tat Compiler.Parser.MxstarParser$FunctionDeclContext.accept(MxstarParser.java:328)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitDeclaration(ASTBuilder.java:28)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitDeclaration(ASTBuilder.java:12)\n\
    \tat Compiler.Parser.MxstarParser$DeclarationContext.accept(MxstarParser.java:185)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitProgram(ASTBuilder.java:18)\n\t\
    at Compiler.SemanticAnalysis.ASTBuilder.visitProgram(ASTBuilder.java:12)\n\tat\
    \ Compiler.Parser.MxstarParser$ProgramContext.accept(MxstarParser.java:130)\n\t\
    at org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.Main.main(Main.java:25)\n", stdout: '', verdict: Wrong Answer}
- {case: ./array-package/array-5.mx, stage: semantic, stderr: '', stdout: '', verdict: Accepted}
- {case: ./array-package/array-4.mx, stage: semantic, stderr: '', stdout: '', verdict: Wrong
    Answer}
- {case: ./loop-package/loop-3.mx, stage: semantic, stderr: "line 4:10 mismatched\
    \ input ';' expecting {'{', '(', '++', '--', '+', '-', '!', '~', 'int', 'bool',\
    \ 'string', 'if', 'for', 'while', 'break', 'continue', 'return', 'new', 'this',\
    \ IntegerConstant, StringConstant, NullConstant, BoolConstant, Identifier}\nException\
    \ in thread \"main\" java.lang.NullPointerException\n\tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitForStmt(ASTBuilder.java:156)\n\t\
    at Compiler.SemanticAnalysis.ASTBuilder.visitForStmt(ASTBuilder.java:12)\n\tat\
    \ Compiler.Parser.MxstarParser$ForStmtContext.accept(MxstarParser.java:1181)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitControlStmt(ASTBuilder.java:136)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitControlStmt(ASTBuilder.java:12)\n\
    \tat Compiler.Parser.MxstarParser$ControlStmtContext.accept(MxstarParser.java:984)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitCompoundStmt(ASTBuilder.java:142)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitCompoundStmt(ASTBuilder.java:12)\n\
    \tat Compiler.Parser.MxstarParser$CompoundStmtContext.accept(MxstarParser.java:1056)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitFunctionDecl(ASTBuilder.java:51)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitFunctionDecl(ASTBuilder.java:12)\n\
    \tat Compiler.Parser.MxstarParser$FunctionDeclContext.accept(MxstarParser.java:328)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitDeclaration(ASTBuilder.java:28)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitDeclaration(ASTBuilder.java:12)\n\
    \tat Compiler.Parser.MxstarParser$DeclarationContext.accept(MxstarParser.java:185)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitProgram(ASTBuilder.java:18)\n\t\
    at Compiler.SemanticAnalysis.ASTBuilder.visitProgram(ASTBuilder.java:12)\n\tat\
    \ Compiler.Parser.MxstarParser$ProgramContext.accept(MxstarParser.java:130)\n\t\
    at org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.Main.main(Main.java:25)\n", stdout: '', verdict: Accepted}
- {case: ./loop-package/loop-2.mx, stage: semantic, stderr: '', stdout: '', verdict: Accepted}
- {case: ./loop-package/loop-1.mx, stage: semantic, stderr: "Exception in thread \"\
    main\" java.lang.NullPointerException\n\tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitForStmt(ASTBuilder.java:156)\n\t\
    at Compiler.SemanticAnalysis.ASTBuilder.visitForStmt(ASTBuilder.java:12)\n\tat\
    \ Compiler.Parser.MxstarParser$ForStmtContext.accept(MxstarParser.java:1181)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitControlStmt(ASTBuilder.java:136)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitControlStmt(ASTBuilder.java:12)\n\
    \tat Compiler.Parser.MxstarParser$ControlStmtContext.accept(MxstarParser.java:984)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitCompoundStmt(ASTBuilder.java:142)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitCompoundStmt(ASTBuilder.java:12)\n\
    \tat Compiler.Parser.MxstarParser$CompoundStmtContext.accept(MxstarParser.java:1056)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitFunctionDecl(ASTBuilder.java:51)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitFunctionDecl(ASTBuilder.java:12)\n\
    \tat Compiler.Parser.MxstarParser$FunctionDeclContext.accept(MxstarParser.java:328)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitDeclaration(ASTBuilder.java:28)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitDeclaration(ASTBuilder.java:12)\n\
    \tat Compiler.Parser.MxstarParser$DeclarationContext.accept(MxstarParser.java:185)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitProgram(ASTBuilder.java:18)\n\t\
    at Compiler.SemanticAnalysis.ASTBuilder.visitProgram(ASTBuilder.java:12)\n\tat\
    \ Compiler.Parser.MxstarParser$ProgramContext.accept(MxstarParser.java:130)\n\t\
    at org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.Main.main(Main.java:25)\n", stdout: '', verdict: Accepted}
- {case: ./string-package/string-1.mx, stage: semantic, stderr: "Exception in thread\
    \ \"main\" java.lang.ClassCastException: class Compiler.AST.IdExprNode cannot\
    \ be cast to class Compiler.AST.UnaryExprNode (Compiler.AST.IdExprNode and Compiler.AST.UnaryExprNode\
    \ are in unnamed module of loader 'app')\n\tat Compiler.SemanticAnalysis.ASTBuilder.visitUnaryOpExpr(ASTBuilder.java:252)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitUnaryOpExpr(ASTBuilder.java:12)\n\
    \tat Compiler.Parser.MxstarParser$UnaryOpExprContext.accept(MxstarParser.java:1474)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitForStmt(ASTBuilder.java:158)\n\t\
    at Compiler.SemanticAnalysis.ASTBuilder.visitForStmt(ASTBuilder.java:12)\n\tat\
    \ Compiler.Parser.MxstarParser$ForStmtContext.accept(MxstarParser.java:1181)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitControlStmt(ASTBuilder.java:136)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitControlStmt(ASTBuilder.java:12)\n\
    \tat Compiler.Parser.MxstarParser$ControlStmtContext.accept(MxstarParser.java:984)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitCompoundStmt(ASTBuilder.java:142)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitCompoundStmt(ASTBuilder.java:12)\n\
    \tat Compiler.Parser.MxstarParser$CompoundStmtContext.accept(MxstarParser.java:1056)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitFunctionDecl(ASTBuilder.java:51)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitFunctionDecl(ASTBuilder.java:12)\n\
    \tat Compiler.Parser.MxstarParser$FunctionDeclContext.accept(MxstarParser.java:328)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitDeclaration(ASTBuilder.java:28)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitDeclaration(ASTBuilder.java:12)\n\
    \tat Compiler.Parser.MxstarParser$DeclarationContext.accept(MxstarParser.java:185)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitProgram(ASTBuilder.java:18)\n\t\
    at Compiler.SemanticAnalysis.ASTBuilder.visitProgram(ASTBuilder.java:12)\n\tat\
    \ Compiler.Parser.MxstarParser$ProgramContext.accept(MxstarParser.java:130)\n\t\
    at org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.Main.main(Main.java:25)\n", stdout: '', verdict: Wrong Answer}
- {case: ./symbol-package/symbol-7.mx, stage: semantic, stderr: 'line 2:4 no viable
    alternative at input ''intthis''

    ', stdout: '', verdict: Wrong Answer}
- {case: ./symbol-package/symbol-3.mx, stage: semantic, stderr: "line 3:8 mismatched\
    \ input '123' expecting {'[', Identifier}\nException in thread \"main\" java.lang.NullPointerException\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitSingleVariable(ASTBuilder.java:70)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitSingleVariable(ASTBuilder.java:12)\n\
    \tat Compiler.Parser.MxstarParser$SingleVariableContext.accept(MxstarParser.java:491)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitVariableList(ASTBuilder.java:64)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitVariableList(ASTBuilder.java:12)\n\
    \tat Compiler.Parser.MxstarParser$VariableListContext.accept(MxstarParser.java:437)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitVariableDecl(ASTBuilder.java:56)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitVariableDecl(ASTBuilder.java:12)\n\
    \tat Compiler.Parser.MxstarParser$VariableDeclContext.accept(MxstarParser.java:394)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitVarDeclStmt(ASTBuilder.java:128)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitVarDeclStmt(ASTBuilder.java:12)\n\
    \tat Compiler.Parser.MxstarParser$VarDeclStmtContext.accept(MxstarParser.java:962)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitCompoundStmt(ASTBuilder.java:142)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitCompoundStmt(ASTBuilder.java:12)\n\
    \tat Compiler.Parser.MxstarParser$CompoundStmtContext.accept(MxstarParser.java:1056)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitFunctionDecl(ASTBuilder.java:51)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitFunctionDecl(ASTBuilder.java:12)\n\
    \tat Compiler.Parser.MxstarParser$FunctionDeclContext.accept(MxstarParser.java:328)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitDeclaration(ASTBuilder.java:28)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitDeclaration(ASTBuilder.java:12)\n\
    \tat Compiler.Parser.MxstarParser$DeclarationContext.accept(MxstarParser.java:185)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitProgram(ASTBuilder.java:18)\n\t\
    at Compiler.SemanticAnalysis.ASTBuilder.visitProgram(ASTBuilder.java:12)\n\tat\
    \ Compiler.Parser.MxstarParser$ProgramContext.accept(MxstarParser.java:130)\n\t\
    at org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.Main.main(Main.java:25)\n", stdout: '', verdict: Accepted}
- {case: ./symbol-package/symbol-2.mx, stage: semantic, stderr: 'line 3:8 token recognition
    error at: ''_''

    ', stdout: '', verdict: Wrong Answer}
- {case: ./symbol-package/symbol-6.mx, stage: semantic, stderr: "line 3:9 mismatched\
    \ input 'this' expecting Identifier\nException in thread \"main\" java.lang.NullPointerException\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitFunctionDecl(ASTBuilder.java:49)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitFunctionDecl(ASTBuilder.java:12)\n\
    \tat Compiler.Parser.MxstarParser$FunctionDeclContext.accept(MxstarParser.java:328)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitClassDecl(ASTBuilder.java:38)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitClassDecl(ASTBuilder.java:12)\n\
    \tat Compiler.Parser.MxstarParser$ClassDeclContext.accept(MxstarParser.java:252)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitDeclaration(ASTBuilder.java:27)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitDeclaration(ASTBuilder.java:12)\n\
    \tat Compiler.Parser.MxstarParser$DeclarationContext.accept(MxstarParser.java:185)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitProgram(ASTBuilder.java:18)\n\t\
    at Compiler.SemanticAnalysis.ASTBuilder.visitProgram(ASTBuilder.java:12)\n\tat\
    \ Compiler.Parser.MxstarParser$ProgramContext.accept(MxstarParser.java:130)\n\t\
    at org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.Main.main(Main.java:25)\n", stdout: '', verdict: Accepted}
- {case: ./symbol-package/symbol-1.mx, stage: semantic, stderr: '', stdout: '', verdict: Accepted}
- {case: ./symbol-package/symbol-5.mx, stage: semantic, stderr: "line 3:8 mismatched\
    \ input 'int' expecting {'[', Identifier}\nline 4:8 mismatched input 'bool' expecting\
    \ {'[', Identifier}\nline 5:9 mismatched input 'class' expecting {'[', Identifier}\n\
    Exception in thread \"main\" java.lang.NullPointerException\n\tat Compiler.SemanticAnalysis.ASTBuilder.visitSingleVariable(ASTBuilder.java:70)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitSingleVariable(ASTBuilder.java:12)\n\
    \tat Compiler.Parser.MxstarParser$SingleVariableContext.accept(MxstarParser.java:491)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitVariableList(ASTBuilder.java:64)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitVariableList(ASTBuilder.java:12)\n\
    \tat Compiler.Parser.MxstarParser$VariableListContext.accept(MxstarParser.java:437)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitVariableDecl(ASTBuilder.java:56)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitVariableDecl(ASTBuilder.java:12)\n\
    \tat Compiler.Parser.MxstarParser$VariableDeclContext.accept(MxstarParser.java:394)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitVarDeclStmt(ASTBuilder.java:128)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitVarDeclStmt(ASTBuilder.java:12)\n\
    \tat Compiler.Parser.MxstarParser$VarDeclStmtContext.accept(MxstarParser.java:962)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitCompoundStmt(ASTBuilder.java:142)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitCompoundStmt(ASTBuilder.java:12)\n\
    \tat Compiler.Parser.MxstarParser$CompoundStmtContext.accept(MxstarParser.java:1056)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitFunctionDecl(ASTBuilder.java:51)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitFunctionDecl(ASTBuilder.java:12)\n\
    \tat Compiler.Parser.MxstarParser$FunctionDeclContext.accept(MxstarParser.java:328)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitDeclaration(ASTBuilder.java:28)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitDeclaration(ASTBuilder.java:12)\n\
    \tat Compiler.Parser.MxstarParser$DeclarationContext.accept(MxstarParser.java:185)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitProgram(ASTBuilder.java:18)\n\t\
    at Compiler.SemanticAnalysis.ASTBuilder.visitProgram(ASTBuilder.java:12)\n\tat\
    \ Compiler.Parser.MxstarParser$ProgramContext.accept(MxstarParser.java:130)\n\t\
    at org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.Main.main(Main.java:25)\n", stdout: '', verdict: Accepted}
- {case: ./symbol-package/symbol-4.mx, stage: semantic, stderr: '', stdout: '', verdict: Wrong
    Answer}
- {case: ./function-package/function-3.mx, stage: semantic, stderr: '', stdout: '',
  verdict: Wrong Answer}
- {case: ./function-package/function-2.mx, stage: semantic, stderr: '', stdout: '',
  verdict: Wrong Answer}
- {case: ./function-package/function-1.mx, stage: semantic, stderr: '', stdout: '',
  verdict: Wrong Answer}
- {case: ./class-package/class-5.mx, stage: semantic, stderr: '', stdout: '', verdict: Accepted}
- {case: ./class-package/class-1.mx, stage: semantic, stderr: '', stdout: '', verdict: Accepted}
- {case: ./class-package/class-4.mx, stage: semantic, stderr: '', stdout: '', verdict: Wrong
    Answer}
- {case: ./class-package/class-11.mx, stage: semantic, stderr: '', stdout: '', verdict: Accepted}
- {case: ./class-package/class-10.mx, stage: semantic, stderr: '', stdout: '', verdict: Wrong
    Answer}
- {case: ./class-package/class-14.mx, stage: semantic, stderr: '', stdout: '', verdict: Wrong
    Answer}
- {case: ./class-package/class-9.mx, stage: semantic, stderr: '', stdout: '', verdict: Accepted}
- {case: ./class-package/class-13.mx, stage: semantic, stderr: '', stdout: '', verdict: Accepted}
- {case: ./class-package/class-8.mx, stage: semantic, stderr: '', stdout: '', verdict: Wrong
    Answer}
- {case: ./class-package/class-12.mx, stage: semantic, stderr: '', stdout: '', verdict: Wrong
    Answer}
- {case: ./class-package/class-3.mx, stage: semantic, stderr: '', stdout: '', verdict: Accepted}
- {case: ./class-package/class-7.mx, stage: semantic, stderr: '', stdout: '', verdict: Accepted}
- {case: ./class-package/class-6.mx, stage: semantic, stderr: '', stdout: '', verdict: Accepted}
- {case: ./class-package/class-2.mx, stage: semantic, stderr: '', stdout: '', verdict: Accepted}
- {case: ./misc-package/misc-3.mx, stage: semantic, stderr: '', stdout: '', verdict: Accepted}
- {case: ./misc-package/misc-29.mx, stage: semantic, stderr: "Exception in thread\
    \ \"main\" java.lang.ClassCastException: class Compiler.AST.IntConstExprNode cannot\
    \ be cast to class Compiler.AST.UnaryExprNode (Compiler.AST.IntConstExprNode and\
    \ Compiler.AST.UnaryExprNode are in unnamed module of loader 'app')\n\tat Compiler.SemanticAnalysis.ASTBuilder.visitUnaryOpExpr(ASTBuilder.java:252)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitUnaryOpExpr(ASTBuilder.java:12)\n\
    \tat Compiler.Parser.MxstarParser$UnaryOpExprContext.accept(MxstarParser.java:1474)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitBinaryExpr(ASTBuilder.java:209)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitBinaryExpr(ASTBuilder.java:12)\n\
    \tat Compiler.Parser.MxstarParser$BinaryExprContext.accept(MxstarParser.java:1438)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitIfStmt(ASTBuilder.java:149)\n\t\
    at Compiler.SemanticAnalysis.ASTBuilder.visitIfStmt(ASTBuilder.java:12)\n\tat\
    \ Compiler.Parser.MxstarParser$IfStmtContext.accept(MxstarParser.java:1136)\n\t\
    at org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitControlStmt(ASTBuilder.java:136)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitControlStmt(ASTBuilder.java:12)\n\
    \tat Compiler.Parser.MxstarParser$ControlStmtContext.accept(MxstarParser.java:984)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitCompoundStmt(ASTBuilder.java:142)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitCompoundStmt(ASTBuilder.java:12)\n\
    \tat Compiler.Parser.MxstarParser$CompoundStmtContext.accept(MxstarParser.java:1056)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitFunctionDecl(ASTBuilder.java:51)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitFunctionDecl(ASTBuilder.java:12)\n\
    \tat Compiler.Parser.MxstarParser$FunctionDeclContext.accept(MxstarParser.java:328)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitDeclaration(ASTBuilder.java:28)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitDeclaration(ASTBuilder.java:12)\n\
    \tat Compiler.Parser.MxstarParser$DeclarationContext.accept(MxstarParser.java:185)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitProgram(ASTBuilder.java:18)\n\t\
    at Compiler.SemanticAnalysis.ASTBuilder.visitProgram(ASTBuilder.java:12)\n\tat\
    \ Compiler.Parser.MxstarParser$ProgramContext.accept(MxstarParser.java:130)\n\t\
    at org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.Main.main(Main.java:25)\n", stdout: '', verdict: Wrong Answer}
- {case: ./misc-package/misc-7.mx, stage: semantic, stderr: '', stdout: '', verdict: Accepted}
- {case: ./misc-package/misc-19.mx, stage: semantic, stderr: '', stdout: '', verdict: Accepted}
- {case: ./misc-package/misc-6.mx, stage: semantic, stderr: "Exception in thread \"\
    main\" java.lang.ClassCastException: class Compiler.AST.IdExprNode cannot be cast\
    \ to class Compiler.AST.UnaryExprNode (Compiler.AST.IdExprNode and Compiler.AST.UnaryExprNode\
    \ are in unnamed module of loader 'app')\n\tat Compiler.SemanticAnalysis.ASTBuilder.visitUnaryOpExpr(ASTBuilder.java:252)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitUnaryOpExpr(ASTBuilder.java:12)\n\
    \tat Compiler.Parser.MxstarParser$UnaryOpExprContext.accept(MxstarParser.java:1474)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitForStmt(ASTBuilder.java:158)\n\t\
    at Compiler.SemanticAnalysis.ASTBuilder.visitForStmt(ASTBuilder.java:12)\n\tat\
    \ Compiler.Parser.MxstarParser$ForStmtContext.accept(MxstarParser.java:1181)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitControlStmt(ASTBuilder.java:136)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitControlStmt(ASTBuilder.java:12)\n\
    \tat Compiler.Parser.MxstarParser$ControlStmtContext.accept(MxstarParser.java:984)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitCompoundStmt(ASTBuilder.java:142)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitCompoundStmt(ASTBuilder.java:12)\n\
    \tat Compiler.Parser.MxstarParser$CompoundStmtContext.accept(MxstarParser.java:1056)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitFunctionDecl(ASTBuilder.java:51)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitFunctionDecl(ASTBuilder.java:12)\n\
    \tat Compiler.Parser.MxstarParser$FunctionDeclContext.accept(MxstarParser.java:328)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitClassDecl(ASTBuilder.java:38)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitClassDecl(ASTBuilder.java:12)\n\
    \tat Compiler.Parser.MxstarParser$ClassDeclContext.accept(MxstarParser.java:252)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitDeclaration(ASTBuilder.java:27)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitDeclaration(ASTBuilder.java:12)\n\
    \tat Compiler.Parser.MxstarParser$DeclarationContext.accept(MxstarParser.java:185)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitProgram(ASTBuilder.java:18)\n\t\
    at Compiler.SemanticAnalysis.ASTBuilder.visitProgram(ASTBuilder.java:12)\n\tat\
    \ Compiler.Parser.MxstarParser$ProgramContext.accept(MxstarParser.java:130)\n\t\
    at org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.Main.main(Main.java:25)\n", stdout: '', verdict: Wrong Answer}
- {case: ./misc-package/misc-18.mx, stage: semantic, stderr: '', stdout: '', verdict: Accepted}
- {case: ./misc-package/misc-2.mx, stage: semantic, stderr: '', stdout: '', verdict: Accepted}
- {case: ./misc-package/misc-28.mx, stage: semantic, stderr: '', stdout: '', verdict: Accepted}
- {case: ./misc-package/misc-23.mx, stage: semantic, stderr: '', stdout: '', verdict: Accepted}
- {case: ./misc-package/misc-17.mx, stage: semantic, stderr: "Exception in thread\
    \ \"main\" java.lang.ClassCastException: class Compiler.AST.IntConstExprNode cannot\
    \ be cast to class Compiler.AST.UnaryExprNode (Compiler.AST.IntConstExprNode and\
    \ Compiler.AST.UnaryExprNode are in unnamed module of loader 'app')\n\tat Compiler.SemanticAnalysis.ASTBuilder.visitUnaryOpExpr(ASTBuilder.java:252)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitUnaryOpExpr(ASTBuilder.java:12)\n\
    \tat Compiler.Parser.MxstarParser$UnaryOpExprContext.accept(MxstarParser.java:1474)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitBinaryExpr(ASTBuilder.java:209)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitBinaryExpr(ASTBuilder.java:12)\n\
    \tat Compiler.Parser.MxstarParser$BinaryExprContext.accept(MxstarParser.java:1438)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitBinaryExpr(ASTBuilder.java:209)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitBinaryExpr(ASTBuilder.java:12)\n\
    \tat Compiler.Parser.MxstarParser$BinaryExprContext.accept(MxstarParser.java:1438)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitIfStmt(ASTBuilder.java:149)\n\t\
    at Compiler.SemanticAnalysis.ASTBuilder.visitIfStmt(ASTBuilder.java:12)\n\tat\
    \ Compiler.Parser.MxstarParser$IfStmtContext.accept(MxstarParser.java:1136)\n\t\
    at org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitControlStmt(ASTBuilder.java:136)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitControlStmt(ASTBuilder.java:12)\n\
    \tat Compiler.Parser.MxstarParser$ControlStmtContext.accept(MxstarParser.java:984)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitCompoundStmt(ASTBuilder.java:142)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitCompoundStmt(ASTBuilder.java:12)\n\
    \tat Compiler.Parser.MxstarParser$CompoundStmtContext.accept(MxstarParser.java:1056)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitFunctionDecl(ASTBuilder.java:51)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitFunctionDecl(ASTBuilder.java:12)\n\
    \tat Compiler.Parser.MxstarParser$FunctionDeclContext.accept(MxstarParser.java:328)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitDeclaration(ASTBuilder.java:28)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitDeclaration(ASTBuilder.java:12)\n\
    \tat Compiler.Parser.MxstarParser$DeclarationContext.accept(MxstarParser.java:185)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitProgram(ASTBuilder.java:18)\n\t\
    at Compiler.SemanticAnalysis.ASTBuilder.visitProgram(ASTBuilder.java:12)\n\tat\
    \ Compiler.Parser.MxstarParser$ProgramContext.accept(MxstarParser.java:130)\n\t\
    at org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.Main.main(Main.java:25)\n", stdout: '', verdict: Wrong Answer}
- {case: ./misc-package/misc-9.mx, stage: semantic, stderr: '', stdout: '', verdict: Accepted}
- {case: ./misc-package/misc-33.mx, stage: semantic, stderr: '', stdout: '', verdict: Accepted}
- {case: ./misc-package/misc-13.mx, stage: semantic, stderr: '', stdout: '', verdict: Accepted}
- {case: ./misc-package/misc-27.mx, stage: semantic, stderr: "Exception in thread\
    \ \"main\" java.lang.NullPointerException\n\tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitForStmt(ASTBuilder.java:156)\n\t\
    at Compiler.SemanticAnalysis.ASTBuilder.visitForStmt(ASTBuilder.java:12)\n\tat\
    \ Compiler.Parser.MxstarParser$ForStmtContext.accept(MxstarParser.java:1181)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitControlStmt(ASTBuilder.java:136)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitControlStmt(ASTBuilder.java:12)\n\
    \tat Compiler.Parser.MxstarParser$ControlStmtContext.accept(MxstarParser.java:984)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitCompoundStmt(ASTBuilder.java:142)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitCompoundStmt(ASTBuilder.java:12)\n\
    \tat Compiler.Parser.MxstarParser$CompoundStmtContext.accept(MxstarParser.java:1056)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitFunctionDecl(ASTBuilder.java:51)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitFunctionDecl(ASTBuilder.java:12)\n\
    \tat Compiler.Parser.MxstarParser$FunctionDeclContext.accept(MxstarParser.java:328)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitDeclaration(ASTBuilder.java:28)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitDeclaration(ASTBuilder.java:12)\n\
    \tat Compiler.Parser.MxstarParser$DeclarationContext.accept(MxstarParser.java:185)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitProgram(ASTBuilder.java:18)\n\t\
    at Compiler.SemanticAnalysis.ASTBuilder.visitProgram(ASTBuilder.java:12)\n\tat\
    \ Compiler.Parser.MxstarParser$ProgramContext.accept(MxstarParser.java:130)\n\t\
    at org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.Main.main(Main.java:25)\n", stdout: '', verdict: Wrong Answer}
- {case: ./misc-package/misc-37.mx, stage: semantic, stderr: "Exception in thread\
    \ \"main\" java.lang.ClassCastException: class Compiler.AST.IdExprNode cannot\
    \ be cast to class Compiler.AST.UnaryExprNode (Compiler.AST.IdExprNode and Compiler.AST.UnaryExprNode\
    \ are in unnamed module of loader 'app')\n\tat Compiler.SemanticAnalysis.ASTBuilder.visitUnaryOpExpr(ASTBuilder.java:252)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitUnaryOpExpr(ASTBuilder.java:12)\n\
    \tat Compiler.Parser.MxstarParser$UnaryOpExprContext.accept(MxstarParser.java:1474)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitForStmt(ASTBuilder.java:158)\n\t\
    at Compiler.SemanticAnalysis.ASTBuilder.visitForStmt(ASTBuilder.java:12)\n\tat\
    \ Compiler.Parser.MxstarParser$ForStmtContext.accept(MxstarParser.java:1181)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitControlStmt(ASTBuilder.java:136)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitControlStmt(ASTBuilder.java:12)\n\
    \tat Compiler.Parser.MxstarParser$ControlStmtContext.accept(MxstarParser.java:984)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitCompoundStmt(ASTBuilder.java:142)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitCompoundStmt(ASTBuilder.java:12)\n\
    \tat Compiler.Parser.MxstarParser$CompoundStmtContext.accept(MxstarParser.java:1056)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitFunctionDecl(ASTBuilder.java:51)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitFunctionDecl(ASTBuilder.java:12)\n\
    \tat Compiler.Parser.MxstarParser$FunctionDeclContext.accept(MxstarParser.java:328)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitDeclaration(ASTBuilder.java:28)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitDeclaration(ASTBuilder.java:12)\n\
    \tat Compiler.Parser.MxstarParser$DeclarationContext.accept(MxstarParser.java:185)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitProgram(ASTBuilder.java:18)\n\t\
    at Compiler.SemanticAnalysis.ASTBuilder.visitProgram(ASTBuilder.java:12)\n\tat\
    \ Compiler.Parser.MxstarParser$ProgramContext.accept(MxstarParser.java:130)\n\t\
    at org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.Main.main(Main.java:25)\n", stdout: '', verdict: Wrong Answer}
- {case: ./misc-package/misc-12.mx, stage: semantic, stderr: '', stdout: '', verdict: Accepted}
- {case: ./misc-package/misc-26.mx, stage: semantic, stderr: '', stdout: '', verdict: Accepted}
- {case: ./misc-package/misc-36.mx, stage: semantic, stderr: "Exception in thread\
    \ \"main\" java.lang.ClassCastException: class Compiler.AST.IntConstExprNode cannot\
    \ be cast to class Compiler.AST.UnaryExprNode (Compiler.AST.IntConstExprNode and\
    \ Compiler.AST.UnaryExprNode are in unnamed module of loader 'app')\n\tat Compiler.SemanticAnalysis.ASTBuilder.visitUnaryOpExpr(ASTBuilder.java:252)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitUnaryOpExpr(ASTBuilder.java:12)\n\
    \tat Compiler.Parser.MxstarParser$UnaryOpExprContext.accept(MxstarParser.java:1474)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitSingleVariable(ASTBuilder.java:71)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitSingleVariable(ASTBuilder.java:12)\n\
    \tat Compiler.Parser.MxstarParser$SingleVariableContext.accept(MxstarParser.java:491)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitVariableList(ASTBuilder.java:64)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitVariableList(ASTBuilder.java:12)\n\
    \tat Compiler.Parser.MxstarParser$VariableListContext.accept(MxstarParser.java:437)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitVariableDecl(ASTBuilder.java:56)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitVariableDecl(ASTBuilder.java:12)\n\
    \tat Compiler.Parser.MxstarParser$VariableDeclContext.accept(MxstarParser.java:394)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitVarDeclStmt(ASTBuilder.java:128)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitVarDeclStmt(ASTBuilder.java:12)\n\
    \tat Compiler.Parser.MxstarParser$VarDeclStmtContext.accept(MxstarParser.java:962)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitCompoundStmt(ASTBuilder.java:142)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitCompoundStmt(ASTBuilder.java:12)\n\
    \tat Compiler.Parser.MxstarParser$CompoundStmtContext.accept(MxstarParser.java:1056)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitFunctionDecl(ASTBuilder.java:51)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitFunctionDecl(ASTBuilder.java:12)\n\
    \tat Compiler.Parser.MxstarParser$FunctionDeclContext.accept(MxstarParser.java:328)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitDeclaration(ASTBuilder.java:28)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitDeclaration(ASTBuilder.java:12)\n\
    \tat Compiler.Parser.MxstarParser$DeclarationContext.accept(MxstarParser.java:185)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitProgram(ASTBuilder.java:18)\n\t\
    at Compiler.SemanticAnalysis.ASTBuilder.visitProgram(ASTBuilder.java:12)\n\tat\
    \ Compiler.Parser.MxstarParser$ProgramContext.accept(MxstarParser.java:130)\n\t\
    at org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.Main.main(Main.java:25)\n", stdout: '', verdict: Wrong Answer}
- {case: ./misc-package/misc-22.mx, stage: semantic, stderr: '', stdout: '', verdict: Accepted}
- {case: ./misc-package/misc-16.mx, stage: semantic, stderr: "Exception in thread\
    \ \"main\" java.lang.ClassCastException: class Compiler.AST.IntConstExprNode cannot\
    \ be cast to class Compiler.AST.UnaryExprNode (Compiler.AST.IntConstExprNode and\
    \ Compiler.AST.UnaryExprNode are in unnamed module of loader 'app')\n\tat Compiler.SemanticAnalysis.ASTBuilder.visitUnaryOpExpr(ASTBuilder.java:252)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitUnaryOpExpr(ASTBuilder.java:12)\n\
    \tat Compiler.Parser.MxstarParser$UnaryOpExprContext.accept(MxstarParser.java:1474)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitBinaryExpr(ASTBuilder.java:209)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitBinaryExpr(ASTBuilder.java:12)\n\
    \tat Compiler.Parser.MxstarParser$BinaryExprContext.accept(MxstarParser.java:1438)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitExprStmt(ASTBuilder.java:132)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitExprStmt(ASTBuilder.java:12)\n\t\
    at Compiler.Parser.MxstarParser$ExprStmtContext.accept(MxstarParser.java:951)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitForStmt(ASTBuilder.java:159)\n\t\
    at Compiler.SemanticAnalysis.ASTBuilder.visitForStmt(ASTBuilder.java:12)\n\tat\
    \ Compiler.Parser.MxstarParser$ForStmtContext.accept(MxstarParser.java:1181)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitControlStmt(ASTBuilder.java:136)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitControlStmt(ASTBuilder.java:12)\n\
    \tat Compiler.Parser.MxstarParser$ControlStmtContext.accept(MxstarParser.java:984)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitCompoundStmt(ASTBuilder.java:142)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitCompoundStmt(ASTBuilder.java:12)\n\
    \tat Compiler.Parser.MxstarParser$CompoundStmtContext.accept(MxstarParser.java:1056)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitBlockStmt(ASTBuilder.java:124)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitBlockStmt(ASTBuilder.java:12)\n\
    \tat Compiler.Parser.MxstarParser$BlockStmtContext.accept(MxstarParser.java:973)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitForStmt(ASTBuilder.java:159)\n\t\
    at Compiler.SemanticAnalysis.ASTBuilder.visitForStmt(ASTBuilder.java:12)\n\tat\
    \ Compiler.Parser.MxstarParser$ForStmtContext.accept(MxstarParser.java:1181)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitControlStmt(ASTBuilder.java:136)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitControlStmt(ASTBuilder.java:12)\n\
    \tat Compiler.Parser.MxstarParser$ControlStmtContext.accept(MxstarParser.java:984)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitCompoundStmt(ASTBuilder.java:142)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitCompoundStmt(ASTBuilder.java:12)\n\
    \tat Compiler.Parser.MxstarParser$CompoundStmtContext.accept(MxstarParser.java:1056)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitFunctionDecl(ASTBuilder.java:51)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitFunctionDecl(ASTBuilder.java:12)\n\
    \tat Compiler.Parser.MxstarParser$FunctionDeclContext.accept(MxstarParser.java:328)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitDeclaration(ASTBuilder.java:28)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitDeclaration(ASTBuilder.java:12)\n\
    \tat Compiler.Parser.MxstarParser$DeclarationContext.accept(MxstarParser.java:185)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitProgram(ASTBuilder.java:18)\n\t\
    at Compiler.SemanticAnalysis.ASTBuilder.visitProgram(ASTBuilder.java:12)\n\tat\
    \ Compiler.Parser.MxstarParser$ProgramContext.accept(MxstarParser.java:130)\n\t\
    at org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.Main.main(Main.java:25)\n", stdout: '', verdict: Wrong Answer}
- {case: ./misc-package/misc-8.mx, stage: semantic, stderr: '', stdout: '', verdict: Accepted}
- {case: ./misc-package/misc-32.mx, stage: semantic, stderr: "Exception in thread\
    \ \"main\" java.lang.ClassCastException: class Compiler.AST.IntConstExprNode cannot\
    \ be cast to class Compiler.AST.UnaryExprNode (Compiler.AST.IntConstExprNode and\
    \ Compiler.AST.UnaryExprNode are in unnamed module of loader 'app')\n\tat Compiler.SemanticAnalysis.ASTBuilder.visitUnaryOpExpr(ASTBuilder.java:252)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitUnaryOpExpr(ASTBuilder.java:12)\n\
    \tat Compiler.Parser.MxstarParser$UnaryOpExprContext.accept(MxstarParser.java:1474)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitBinaryExpr(ASTBuilder.java:209)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitBinaryExpr(ASTBuilder.java:12)\n\
    \tat Compiler.Parser.MxstarParser$BinaryExprContext.accept(MxstarParser.java:1438)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitSingleVariable(ASTBuilder.java:71)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitSingleVariable(ASTBuilder.java:12)\n\
    \tat Compiler.Parser.MxstarParser$SingleVariableContext.accept(MxstarParser.java:491)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitVariableList(ASTBuilder.java:64)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitVariableList(ASTBuilder.java:12)\n\
    \tat Compiler.Parser.MxstarParser$VariableListContext.accept(MxstarParser.java:437)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitVariableDecl(ASTBuilder.java:56)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitVariableDecl(ASTBuilder.java:12)\n\
    \tat Compiler.Parser.MxstarParser$VariableDeclContext.accept(MxstarParser.java:394)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitDeclaration(ASTBuilder.java:29)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitDeclaration(ASTBuilder.java:12)\n\
    \tat Compiler.Parser.MxstarParser$DeclarationContext.accept(MxstarParser.java:185)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitProgram(ASTBuilder.java:18)\n\t\
    at Compiler.SemanticAnalysis.ASTBuilder.visitProgram(ASTBuilder.java:12)\n\tat\
    \ Compiler.Parser.MxstarParser$ProgramContext.accept(MxstarParser.java:130)\n\t\
    at org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.Main.main(Main.java:25)\n", stdout: '', verdict: Accepted}
- {case: ./misc-package/misc-11.mx, stage: semantic, stderr: "Exception in thread\
    \ \"main\" java.lang.NullPointerException\n\tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitForStmt(ASTBuilder.java:156)\n\t\
    at Compiler.SemanticAnalysis.ASTBuilder.visitForStmt(ASTBuilder.java:12)\n\tat\
    \ Compiler.Parser.MxstarParser$ForStmtContext.accept(MxstarParser.java:1181)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitControlStmt(ASTBuilder.java:136)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitControlStmt(ASTBuilder.java:12)\n\
    \tat Compiler.Parser.MxstarParser$ControlStmtContext.accept(MxstarParser.java:984)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitCompoundStmt(ASTBuilder.java:142)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitCompoundStmt(ASTBuilder.java:12)\n\
    \tat Compiler.Parser.MxstarParser$CompoundStmtContext.accept(MxstarParser.java:1056)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitFunctionDecl(ASTBuilder.java:51)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitFunctionDecl(ASTBuilder.java:12)\n\
    \tat Compiler.Parser.MxstarParser$FunctionDeclContext.accept(MxstarParser.java:328)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitClassDecl(ASTBuilder.java:38)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitClassDecl(ASTBuilder.java:12)\n\
    \tat Compiler.Parser.MxstarParser$ClassDeclContext.accept(MxstarParser.java:252)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitDeclaration(ASTBuilder.java:27)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitDeclaration(ASTBuilder.java:12)\n\
    \tat Compiler.Parser.MxstarParser$DeclarationContext.accept(MxstarParser.java:185)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitProgram(ASTBuilder.java:18)\n\t\
    at Compiler.SemanticAnalysis.ASTBuilder.visitProgram(ASTBuilder.java:12)\n\tat\
    \ Compiler.Parser.MxstarParser$ProgramContext.accept(MxstarParser.java:130)\n\t\
    at org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.Main.main(Main.java:25)\n", stdout: '', verdict: Wrong Answer}
- {case: ./misc-package/misc-25.mx, stage: semantic, stderr: '', stdout: '', verdict: Accepted}
- {case: ./misc-package/misc-35.mx, stage: semantic, stderr: '', stdout: '', verdict: Accepted}
- {case: ./misc-package/misc-21.mx, stage: semantic, stderr: '', stdout: '', verdict: Accepted}
- {case: ./misc-package/misc-15.mx, stage: semantic, stderr: '', stdout: '', verdict: Wrong
    Answer}
- {case: ./misc-package/misc-31.mx, stage: semantic, stderr: "Exception in thread\
    \ \"main\" java.lang.ClassCastException: class Compiler.AST.IntConstExprNode cannot\
    \ be cast to class Compiler.AST.UnaryExprNode (Compiler.AST.IntConstExprNode and\
    \ Compiler.AST.UnaryExprNode are in unnamed module of loader 'app')\n\tat Compiler.SemanticAnalysis.ASTBuilder.visitUnaryOpExpr(ASTBuilder.java:252)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitUnaryOpExpr(ASTBuilder.java:12)\n\
    \tat Compiler.Parser.MxstarParser$UnaryOpExprContext.accept(MxstarParser.java:1474)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitBinaryExpr(ASTBuilder.java:209)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitBinaryExpr(ASTBuilder.java:12)\n\
    \tat Compiler.Parser.MxstarParser$BinaryExprContext.accept(MxstarParser.java:1438)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitSingleVariable(ASTBuilder.java:71)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitSingleVariable(ASTBuilder.java:12)\n\
    \tat Compiler.Parser.MxstarParser$SingleVariableContext.accept(MxstarParser.java:491)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitVariableList(ASTBuilder.java:64)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitVariableList(ASTBuilder.java:12)\n\
    \tat Compiler.Parser.MxstarParser$VariableListContext.accept(MxstarParser.java:437)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitVariableDecl(ASTBuilder.java:56)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitVariableDecl(ASTBuilder.java:12)\n\
    \tat Compiler.Parser.MxstarParser$VariableDeclContext.accept(MxstarParser.java:394)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitDeclaration(ASTBuilder.java:29)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitDeclaration(ASTBuilder.java:12)\n\
    \tat Compiler.Parser.MxstarParser$DeclarationContext.accept(MxstarParser.java:185)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitProgram(ASTBuilder.java:18)\n\t\
    at Compiler.SemanticAnalysis.ASTBuilder.visitProgram(ASTBuilder.java:12)\n\tat\
    \ Compiler.Parser.MxstarParser$ProgramContext.accept(MxstarParser.java:130)\n\t\
    at org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.Main.main(Main.java:25)\n", stdout: '', verdict: Wrong Answer}
- {case: ./misc-package/misc-20.mx, stage: semantic, stderr: '', stdout: '', verdict: Accepted}
- {case: ./misc-package/misc-14.mx, stage: semantic, stderr: "Exception in thread\
    \ \"main\" java.lang.ClassCastException: class Compiler.AST.IntConstExprNode cannot\
    \ be cast to class Compiler.AST.UnaryExprNode (Compiler.AST.IntConstExprNode and\
    \ Compiler.AST.UnaryExprNode are in unnamed module of loader 'app')\n\tat Compiler.SemanticAnalysis.ASTBuilder.visitUnaryOpExpr(ASTBuilder.java:252)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitUnaryOpExpr(ASTBuilder.java:12)\n\
    \tat Compiler.Parser.MxstarParser$UnaryOpExprContext.accept(MxstarParser.java:1474)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitBinaryExpr(ASTBuilder.java:209)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitBinaryExpr(ASTBuilder.java:12)\n\
    \tat Compiler.Parser.MxstarParser$BinaryExprContext.accept(MxstarParser.java:1438)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitBinaryExpr(ASTBuilder.java:209)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitBinaryExpr(ASTBuilder.java:12)\n\
    \tat Compiler.Parser.MxstarParser$BinaryExprContext.accept(MxstarParser.java:1438)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitIfStmt(ASTBuilder.java:149)\n\t\
    at Compiler.SemanticAnalysis.ASTBuilder.visitIfStmt(ASTBuilder.java:12)\n\tat\
    \ Compiler.Parser.MxstarParser$IfStmtContext.accept(MxstarParser.java:1136)\n\t\
    at org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitControlStmt(ASTBuilder.java:136)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitControlStmt(ASTBuilder.java:12)\n\
    \tat Compiler.Parser.MxstarParser$ControlStmtContext.accept(MxstarParser.java:984)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitCompoundStmt(ASTBuilder.java:142)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitCompoundStmt(ASTBuilder.java:12)\n\
    \tat Compiler.Parser.MxstarParser$CompoundStmtContext.accept(MxstarParser.java:1056)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitFunctionDecl(ASTBuilder.java:51)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitFunctionDecl(ASTBuilder.java:12)\n\
    \tat Compiler.Parser.MxstarParser$FunctionDeclContext.accept(MxstarParser.java:328)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitDeclaration(ASTBuilder.java:28)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitDeclaration(ASTBuilder.java:12)\n\
    \tat Compiler.Parser.MxstarParser$DeclarationContext.accept(MxstarParser.java:185)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitProgram(ASTBuilder.java:18)\n\t\
    at Compiler.SemanticAnalysis.ASTBuilder.visitProgram(ASTBuilder.java:12)\n\tat\
    \ Compiler.Parser.MxstarParser$ProgramContext.accept(MxstarParser.java:130)\n\t\
    at org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.Main.main(Main.java:25)\n", stdout: '', verdict: Wrong Answer}
- {case: ./misc-package/misc-30.mx, stage: semantic, stderr: "Exception in thread\
    \ \"main\" java.lang.ClassCastException: class Compiler.AST.IntConstExprNode cannot\
    \ be cast to class Compiler.AST.UnaryExprNode (Compiler.AST.IntConstExprNode and\
    \ Compiler.AST.UnaryExprNode are in unnamed module of loader 'app')\n\tat Compiler.SemanticAnalysis.ASTBuilder.visitUnaryOpExpr(ASTBuilder.java:252)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitUnaryOpExpr(ASTBuilder.java:12)\n\
    \tat Compiler.Parser.MxstarParser$UnaryOpExprContext.accept(MxstarParser.java:1474)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitBinaryExpr(ASTBuilder.java:209)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitBinaryExpr(ASTBuilder.java:12)\n\
    \tat Compiler.Parser.MxstarParser$BinaryExprContext.accept(MxstarParser.java:1438)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitIfStmt(ASTBuilder.java:149)\n\t\
    at Compiler.SemanticAnalysis.ASTBuilder.visitIfStmt(ASTBuilder.java:12)\n\tat\
    \ Compiler.Parser.MxstarParser$IfStmtContext.accept(MxstarParser.java:1136)\n\t\
    at org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitControlStmt(ASTBuilder.java:136)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitControlStmt(ASTBuilder.java:12)\n\
    \tat Compiler.Parser.MxstarParser$ControlStmtContext.accept(MxstarParser.java:984)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitCompoundStmt(ASTBuilder.java:142)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitCompoundStmt(ASTBuilder.java:12)\n\
    \tat Compiler.Parser.MxstarParser$CompoundStmtContext.accept(MxstarParser.java:1056)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitFunctionDecl(ASTBuilder.java:51)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitFunctionDecl(ASTBuilder.java:12)\n\
    \tat Compiler.Parser.MxstarParser$FunctionDeclContext.accept(MxstarParser.java:328)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitDeclaration(ASTBuilder.java:28)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitDeclaration(ASTBuilder.java:12)\n\
    \tat Compiler.Parser.MxstarParser$DeclarationContext.accept(MxstarParser.java:185)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitProgram(ASTBuilder.java:18)\n\t\
    at Compiler.SemanticAnalysis.ASTBuilder.visitProgram(ASTBuilder.java:12)\n\tat\
    \ Compiler.Parser.MxstarParser$ProgramContext.accept(MxstarParser.java:130)\n\t\
    at org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.Main.main(Main.java:25)\n", stdout: '', verdict: Wrong Answer}
- {case: ./misc-package/misc-10.mx, stage: semantic, stderr: "Exception in thread\
    \ \"main\" java.lang.ClassCastException: class Compiler.AST.IdExprNode cannot\
    \ be cast to class Compiler.AST.UnaryExprNode (Compiler.AST.IdExprNode and Compiler.AST.UnaryExprNode\
    \ are in unnamed module of loader 'app')\n\tat Compiler.SemanticAnalysis.ASTBuilder.visitUnaryOpExpr(ASTBuilder.java:252)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitUnaryOpExpr(ASTBuilder.java:12)\n\
    \tat Compiler.Parser.MxstarParser$UnaryOpExprContext.accept(MxstarParser.java:1474)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitForStmt(ASTBuilder.java:158)\n\t\
    at Compiler.SemanticAnalysis.ASTBuilder.visitForStmt(ASTBuilder.java:12)\n\tat\
    \ Compiler.Parser.MxstarParser$ForStmtContext.accept(MxstarParser.java:1181)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitControlStmt(ASTBuilder.java:136)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitControlStmt(ASTBuilder.java:12)\n\
    \tat Compiler.Parser.MxstarParser$ControlStmtContext.accept(MxstarParser.java:984)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitCompoundStmt(ASTBuilder.java:142)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitCompoundStmt(ASTBuilder.java:12)\n\
    \tat Compiler.Parser.MxstarParser$CompoundStmtContext.accept(MxstarParser.java:1056)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitFunctionDecl(ASTBuilder.java:51)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitFunctionDecl(ASTBuilder.java:12)\n\
    \tat Compiler.Parser.MxstarParser$FunctionDeclContext.accept(MxstarParser.java:328)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitDeclaration(ASTBuilder.java:28)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitDeclaration(ASTBuilder.java:12)\n\
    \tat Compiler.Parser.MxstarParser$DeclarationContext.accept(MxstarParser.java:185)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitProgram(ASTBuilder.java:18)\n\t\
    at Compiler.SemanticAnalysis.ASTBuilder.visitProgram(ASTBuilder.java:12)\n\tat\
    \ Compiler.Parser.MxstarParser$ProgramContext.accept(MxstarParser.java:130)\n\t\
    at org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.Main.main(Main.java:25)\n", stdout: '', verdict: Wrong Answer}
- {case: ./misc-package/misc-24.mx, stage: semantic, stderr: '', stdout: '', verdict: Accepted}
- {case: ./misc-package/misc-34.mx, stage: semantic, stderr: 'line 28:7 mismatched
    input ''";\nc[1]="'' expecting {''('', '';'', '','', ''='', ''['', ''.'', ''++'',
    ''--'', ''+'', ''-'', ''*'', ''/'', ''%'', ''<<'', ''>>'', ''<'', ''>'', ''<='',
    ''>='', ''=='', ''!='', ''&'', ''^'', ''|'', ''&&'', ''||''}

    line 30:6 token recognition error at: ''#''

    line 31:6 token recognition error at: ''$''

    line 34:6 token recognition error at: ''''''

    line 53:7 token recognition error at: '':''

    line 58:7 token recognition error at: ''?''

    line 59:7 token recognition error at: ''@''

    line 89:7 token recognition error at: ''_''

    line 90:7 token recognition error at: ''`''

    line 122:6 missing '';'' at ''println''

    line 123:6 missing '';'' at ''println''

    line 124:6 missing '';'' at ''println''

    line 125:6 missing '';'' at ''println''

    line 126:6 missing '';'' at ''println''

    line 127:6 missing '';'' at ''println''

    line 128:6 missing '';'' at ''println''

    line 129:6 missing '';'' at ''println''

    line 130:6 missing '';'' at ''println''

    line 131:7 missing '';'' at ''println''

    line 132:7 missing '';'' at ''println''

    line 133:7 missing '';'' at ''println''

    line 134:7 missing '';'' at ''println''

    line 135:7 missing '';'' at ''println''

    line 136:7 missing '';'' at ''println''

    line 137:7 missing '';'' at ''println''

    line 138:7 missing '';'' at ''println''

    line 139:7 missing '';'' at ''println''

    line 140:7 missing '';'' at ''println''

    line 141:7 missing '';'' at ''println''

    line 142:7 missing '';'' at ''println''

    line 143:7 missing '';'' at ''println''

    line 144:7 missing '';'' at ''println''

    line 145:7 missing '';'' at ''println''

    line 146:7 missing '';'' at ''println''

    line 147:7 missing '';'' at ''println''

    line 148:7 missing '';'' at ''for''

    line 149:7 missing '';'' at ''for''

    line 150:7 missing '';'' at ''for''

    line 151:8 token recognition error at: ''";\nprintln(c[81]+c[82]+c[80]+c[71]+c[76]+c[69]+c[0]+c[66]+c[71]+c[69]+c[82]+c[7]+c[71]+c[76]+c[82]+c[0]+c[86]+c[8]+c[89]);\nprintln(c[71]+c[68]+c[7]+c[86]+c[28]+c[28]+c[15]+c[8]+c[80]+c[67]+c[82]+c[83]+c[80]+c[76]+c[0]+a2q+c[15]+a2q+c[26]);\nprintln(c[71]+c[68]+c[7]+c[86]+c[28]+c[28]+c[16]+c[8]+c[80]+c[67]+c[82]+c[83]+c[80]+c[76]+c[0]+a2q+c[16]+a2q+c[26]);\nprintln(c[71]+c[68]+c[7]+c[86]+c[28]+c[28]+c[17]+c[8]+c[80]+c[67]+c[82]+c[83]+c[80]+c[76]+c[0]+a2q+c[17]+a2q+c[26]);\nprintln(c[71]+c[68]+c[7]+c[86]+c[28]+c[28]+c[18]+c[8]+c[80]+c[67]+c[82]+c[83]+c[80]+c[76]+c[0]+a2q+c[18]+a2q+c[26]);\nprintln(c[71]+c[68]+c[7]+c[86]+c[28]+c[28]+c[19]+c[8]+c[80]+c[67]+c[82]+c[83]+c[80]+c[76]+c[0]+a2q+c[19]+a2q+c[26]);\nprintln(c[71]+c[68]+c[7]+c[86]+c[28]+c[28]+c[20]+c[8]+c[80]+c[67]+c[82]+c[83]+c[80]+c[76]+c[0]+a2q+c[20]+a2q+c[26]);\nprintln(c[71]+c[68]+c[7]+c[86]+c[28]+c[28]+c[21]+c[8]+c[80]+c[67]+c[82]+c[83]+c[80]+c[76]+c[0]+a2q+c[21]+a2q+c[26]);\nprintln(c[71]+c[68]+c[7]+c[86]+c[28]+c[28]+c[22]+c[8]+c[80]+c[67]+c[82]+c[83]+c[80]+c[76]+c[0]+a2q+c[22]+a2q+c[26]);\nprintln(c[71]+c[68]+c[7]+c[86]+c[28]+c[28]+c[23]+c[8]+c[80]+c[67]+c[82]+c[83]+c[80]+c[76]+c[0]+a2q+c[23]+a2q+c[26]);\nprintln(c[71]+c[68]+c[7]+c[86]+c[28]+c[28]+c[24]+c[8]+c[80]+c[67]+c[82]+c[83]+c[80]+c[76]+c[0]+a2q+c[24]+a2q+c[26]);\nprintln(c[91]);\nprintln(c[81]+c[82]+c[80]+c[71]+c[76]+c[69]+c[58]+c[59]+c[0]+c[81]+c[28]+c[76]+c[67]+c[85]+c[0]+c[81]+c[82]+c[80]+c[71]+c[76]+c[69]+c[58]+c[17]+c[20]+c[21]+c[59]+c[26]);\nprintln(c[81]+c[82]+c[80]+c[71]+c[76]+c[69]+c[58]+c[59]+c[0]+c[65]+c[28]+c[76]+c[67]+c[85]+c[0]+c[81]+c[82]+c[80]+c[71]+c[76]+c[69]+c[58]+c[17]+c[20]+c[21]+c[59]+c[26]);\nprintln(c[81]+c[82]+c[80]+c[71]+c[76]+c[69]+c[0]+c[81]+c[17]+c[7]+c[71]+c[76]+c[82]+c[0]+c[81]+c[81]+c[8]+c[89]);\nprintln(c[71]+c[68]+c[7]+c[81]+c[81]+c[27]+c[28]+c[24]+c[8]+c[80]+c[67]+c[82]+c[83]+c[80]+c[76]+c[0]+a2q+c[81]+c[58]+a2q+c[10]+c[66]+c[71]+c[69]+c[82]+c[7]+c[81]+c[81]+c[8]+c[10]+a2q+c[59]+c[28]+a2q+c[26]);\nprintln(c[80]+c[67]+c[82]+c[83]+c[80]+c[76]+c[0]+a2q+c[81]+c[58]+a2q+c[10]+c[66]+c[71]+c[69]+c[82]+c[7]+c[81]+c[81]+c[14]+c[16]+c[15]+c[8]+c[10]+c[66]+c[71]+c[69]+c[82]+c[7]+c[81]+c[81]+c[4]+c[16]+c[15]+c[8]+c[10]+a2q+c[59]+c[28]+a2q+c[26]);\nprintln(c[91]);\nprintln(c[81]+c[82]+c[80]+c[71]+c[76]+c[69]+c[0]+c[65]+c[17]+c[7]+c[71]+c[76]+c[82]+c[0]+c[65]+c[65]+c[8]+c[89]);\nprintln(c[71]+c[68]+c[7]+c[65]+c[65]+c[27]+c[28]+c[24]+c[8]+c[80]+c[67]+c[82]+c[83]+c[80]+c[76]+c[0]+a2q+c[65]+c[58]+a2q+c[10]+c[66]+c[71]+c[69]+c[82]+c[7]+c[65]+c[65]+c[8]+c[10]+a2q+c[59]+c[28]+a2q+c[26]);\nprintln(c[80]+c[67]+c[82]+c[83]+c[80]+c[76]+c[0]+a2q+c[65]+c[58]+a2q+c[10]+c[66]+c[71]+c[69]+c[82]+c[7]+c[65]+c[65]+c[14]+c[16]+c[15]+c[8]+c[10]+c[66]+c[71]+c[69]+c[82]+c[7]+c[65]+c[65]+c[4]+c[16]+c[15]+c[8]+c[10]+a2q+c[59]+c[28]+a2q+c[26]);\nprintln(c[91]);\nprintln(c[81]+c[82]+c[80]+c[71]+c[76]+c[69]+c[0]+c[65]+c[77]+c[28]+a2q+c[26]+a2q+c[26]);\nprintln(c[81]+c[82]+c[80]+c[71]+c[76]+c[69]+c[0]+c[63]+c[17]+c[79]+c[28]+a2q+a2b+a2q+a2q+c[26]);\nprintln(c[81]+c[82]+c[80]+c[71]+c[76]+c[69]+c[0]+c[63]+c[17]+c[64]+c[28]+a2q+a2b+a2b+a2q+c[26]);\nprintln(s[0]);\nfor(i=0;i<93;i++)println(c2(i)+a2q+c[i]+a2q+co);\nfor(i=0;i<31;i++)println(s2(i)+a2q+s[i]+a2q+co);\nfor(i=1;i<31;i++)println(s[i]);\n}''

    line 151:7 missing '';'' at ''}''

    ', stdout: '', verdict: Accepted}
- {case: ./misc-package/misc-5.mx, stage: semantic, stderr: '', stdout: '', verdict: Accepted}
- {case: ./misc-package/misc-1.mx, stage: semantic, stderr: '', stdout: '', verdict: Accepted}
- {case: ./misc-package/misc-4.mx, stage: semantic, stderr: '', stdout: '', verdict: Accepted}
- {case: ./scope-package/scope-3.mx, stage: semantic, stderr: "Exception in thread\
    \ \"main\" java.lang.NullPointerException\n\tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitForStmt(ASTBuilder.java:156)\n\t\
    at Compiler.SemanticAnalysis.ASTBuilder.visitForStmt(ASTBuilder.java:12)\n\tat\
    \ Compiler.Parser.MxstarParser$ForStmtContext.accept(MxstarParser.java:1181)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitControlStmt(ASTBuilder.java:136)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitControlStmt(ASTBuilder.java:12)\n\
    \tat Compiler.Parser.MxstarParser$ControlStmtContext.accept(MxstarParser.java:984)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitCompoundStmt(ASTBuilder.java:142)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitCompoundStmt(ASTBuilder.java:12)\n\
    \tat Compiler.Parser.MxstarParser$CompoundStmtContext.accept(MxstarParser.java:1056)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitFunctionDecl(ASTBuilder.java:51)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitFunctionDecl(ASTBuilder.java:12)\n\
    \tat Compiler.Parser.MxstarParser$FunctionDeclContext.accept(MxstarParser.java:328)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitDeclaration(ASTBuilder.java:28)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitDeclaration(ASTBuilder.java:12)\n\
    \tat Compiler.Parser.MxstarParser$DeclarationContext.accept(MxstarParser.java:185)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitProgram(ASTBuilder.java:18)\n\t\
    at Compiler.SemanticAnalysis.ASTBuilder.visitProgram(ASTBuilder.java:12)\n\tat\
    \ Compiler.Parser.MxstarParser$ProgramContext.accept(MxstarParser.java:130)\n\t\
    at org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.Main.main(Main.java:25)\n", stdout: '', verdict: Accepted}
- {case: ./scope-package/scope-7.mx, stage: semantic, stderr: '', stdout: '', verdict: Accepted}
- {case: ./scope-package/scope-6.mx, stage: semantic, stderr: '', stdout: '', verdict: Accepted}
- {case: ./scope-package/scope-2.mx, stage: semantic, stderr: '', stdout: '', verdict: Accepted}
- {case: ./scope-package/scope-8.mx, stage: semantic, stderr: "Exception in thread\
    \ \"main\" java.lang.ClassCastException: class Compiler.AST.IdExprNode cannot\
    \ be cast to class Compiler.AST.UnaryExprNode (Compiler.AST.IdExprNode and Compiler.AST.UnaryExprNode\
    \ are in unnamed module of loader 'app')\n\tat Compiler.SemanticAnalysis.ASTBuilder.visitUnaryOpExpr(ASTBuilder.java:252)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitUnaryOpExpr(ASTBuilder.java:12)\n\
    \tat Compiler.Parser.MxstarParser$UnaryOpExprContext.accept(MxstarParser.java:1474)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitForStmt(ASTBuilder.java:158)\n\t\
    at Compiler.SemanticAnalysis.ASTBuilder.visitForStmt(ASTBuilder.java:12)\n\tat\
    \ Compiler.Parser.MxstarParser$ForStmtContext.accept(MxstarParser.java:1181)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitControlStmt(ASTBuilder.java:136)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitControlStmt(ASTBuilder.java:12)\n\
    \tat Compiler.Parser.MxstarParser$ControlStmtContext.accept(MxstarParser.java:984)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitCompoundStmt(ASTBuilder.java:142)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitCompoundStmt(ASTBuilder.java:12)\n\
    \tat Compiler.Parser.MxstarParser$CompoundStmtContext.accept(MxstarParser.java:1056)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitFunctionDecl(ASTBuilder.java:51)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitFunctionDecl(ASTBuilder.java:12)\n\
    \tat Compiler.Parser.MxstarParser$FunctionDeclContext.accept(MxstarParser.java:328)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitDeclaration(ASTBuilder.java:28)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitDeclaration(ASTBuilder.java:12)\n\
    \tat Compiler.Parser.MxstarParser$DeclarationContext.accept(MxstarParser.java:185)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitProgram(ASTBuilder.java:18)\n\t\
    at Compiler.SemanticAnalysis.ASTBuilder.visitProgram(ASTBuilder.java:12)\n\tat\
    \ Compiler.Parser.MxstarParser$ProgramContext.accept(MxstarParser.java:130)\n\t\
    at org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.Main.main(Main.java:25)\n", stdout: '', verdict: Wrong Answer}
- {case: ./scope-package/scope-5.mx, stage: semantic, stderr: '', stdout: '', verdict: Wrong
    Answer}
- {case: ./scope-package/scope-1.mx, stage: semantic, stderr: '', stdout: '', verdict: Accepted}
- {case: ./scope-package/scope-4.mx, stage: semantic, stderr: 'line 7:11 mismatched
    input '';'' expecting {''{'', ''('', ''++'', ''--'', ''+'', ''-'', ''!'', ''~'',
    ''int'', ''bool'', ''string'', ''if'', ''for'', ''while'', ''break'', ''continue'',
    ''return'', ''new'', ''this'', IntegerConstant, StringConstant, NullConstant,
    BoolConstant, Identifier}

    line 13:11 mismatched input '';'' expecting {''{'', ''('', ''++'', ''--'', ''+'',
    ''-'', ''!'', ''~'', ''int'', ''bool'', ''string'', ''if'', ''for'', ''while'',
    ''break'', ''continue'', ''return'', ''new'', ''this'', IntegerConstant, StringConstant,
    NullConstant, BoolConstant, Identifier}

    ', stdout: '', verdict: Wrong Answer}
- {case: ./codeforces-package/1145A.mx, stage: semantic, stderr: "Exception in thread\
    \ \"main\" java.lang.ClassCastException: class Compiler.AST.IdExprNode cannot\
    \ be cast to class Compiler.AST.UnaryExprNode (Compiler.AST.IdExprNode and Compiler.AST.UnaryExprNode\
    \ are in unnamed module of loader 'app')\n\tat Compiler.SemanticAnalysis.ASTBuilder.visitUnaryOpExpr(ASTBuilder.java:252)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitUnaryOpExpr(ASTBuilder.java:12)\n\
    \tat Compiler.Parser.MxstarParser$UnaryOpExprContext.accept(MxstarParser.java:1474)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitIfStmt(ASTBuilder.java:149)\n\t\
    at Compiler.SemanticAnalysis.ASTBuilder.visitIfStmt(ASTBuilder.java:12)\n\tat\
    \ Compiler.Parser.MxstarParser$IfStmtContext.accept(MxstarParser.java:1136)\n\t\
    at org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitControlStmt(ASTBuilder.java:136)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitControlStmt(ASTBuilder.java:12)\n\
    \tat Compiler.Parser.MxstarParser$ControlStmtContext.accept(MxstarParser.java:984)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitCompoundStmt(ASTBuilder.java:142)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitCompoundStmt(ASTBuilder.java:12)\n\
    \tat Compiler.Parser.MxstarParser$CompoundStmtContext.accept(MxstarParser.java:1056)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitBlockStmt(ASTBuilder.java:124)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitBlockStmt(ASTBuilder.java:12)\n\
    \tat Compiler.Parser.MxstarParser$BlockStmtContext.accept(MxstarParser.java:973)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitForStmt(ASTBuilder.java:159)\n\t\
    at Compiler.SemanticAnalysis.ASTBuilder.visitForStmt(ASTBuilder.java:12)\n\tat\
    \ Compiler.Parser.MxstarParser$ForStmtContext.accept(MxstarParser.java:1181)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitControlStmt(ASTBuilder.java:136)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitControlStmt(ASTBuilder.java:12)\n\
    \tat Compiler.Parser.MxstarParser$ControlStmtContext.accept(MxstarParser.java:984)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitCompoundStmt(ASTBuilder.java:142)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitCompoundStmt(ASTBuilder.java:12)\n\
    \tat Compiler.Parser.MxstarParser$CompoundStmtContext.accept(MxstarParser.java:1056)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitFunctionDecl(ASTBuilder.java:51)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitFunctionDecl(ASTBuilder.java:12)\n\
    \tat Compiler.Parser.MxstarParser$FunctionDeclContext.accept(MxstarParser.java:328)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitDeclaration(ASTBuilder.java:28)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitDeclaration(ASTBuilder.java:12)\n\
    \tat Compiler.Parser.MxstarParser$DeclarationContext.accept(MxstarParser.java:185)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitProgram(ASTBuilder.java:18)\n\t\
    at Compiler.SemanticAnalysis.ASTBuilder.visitProgram(ASTBuilder.java:12)\n\tat\
    \ Compiler.Parser.MxstarParser$ProgramContext.accept(MxstarParser.java:130)\n\t\
    at org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.Main.main(Main.java:25)\n", stdout: '', verdict: Wrong Answer}
- {case: ./codeforces-package/399A.mx, stage: semantic, stderr: '', stdout: '', verdict: Accepted}
- {case: ./codeforces-package/4A.mx, stage: semantic, stderr: '', stdout: '', verdict: Accepted}
- {case: ./codeforces-package/1A.mx, stage: semantic, stderr: '', stdout: '', verdict: Accepted}
- {case: ./codeforces-package/69A.mx, stage: semantic, stderr: '', stdout: '', verdict: Accepted}
- {case: ./codeforces-package/71A.mx, stage: semantic, stderr: "Exception in thread\
    \ \"main\" java.lang.ClassCastException: class Compiler.AST.IdExprNode cannot\
    \ be cast to class Compiler.AST.UnaryExprNode (Compiler.AST.IdExprNode and Compiler.AST.UnaryExprNode\
    \ are in unnamed module of loader 'app')\n\tat Compiler.SemanticAnalysis.ASTBuilder.visitUnaryOpExpr(ASTBuilder.java:252)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitUnaryOpExpr(ASTBuilder.java:12)\n\
    \tat Compiler.Parser.MxstarParser$UnaryOpExprContext.accept(MxstarParser.java:1474)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitForStmt(ASTBuilder.java:158)\n\t\
    at Compiler.SemanticAnalysis.ASTBuilder.visitForStmt(ASTBuilder.java:12)\n\tat\
    \ Compiler.Parser.MxstarParser$ForStmtContext.accept(MxstarParser.java:1181)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitControlStmt(ASTBuilder.java:136)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitControlStmt(ASTBuilder.java:12)\n\
    \tat Compiler.Parser.MxstarParser$ControlStmtContext.accept(MxstarParser.java:984)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitCompoundStmt(ASTBuilder.java:142)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitCompoundStmt(ASTBuilder.java:12)\n\
    \tat Compiler.Parser.MxstarParser$CompoundStmtContext.accept(MxstarParser.java:1056)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitFunctionDecl(ASTBuilder.java:51)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitFunctionDecl(ASTBuilder.java:12)\n\
    \tat Compiler.Parser.MxstarParser$FunctionDeclContext.accept(MxstarParser.java:328)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitDeclaration(ASTBuilder.java:28)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitDeclaration(ASTBuilder.java:12)\n\
    \tat Compiler.Parser.MxstarParser$DeclarationContext.accept(MxstarParser.java:185)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.SemanticAnalysis.ASTBuilder.visitProgram(ASTBuilder.java:18)\n\t\
    at Compiler.SemanticAnalysis.ASTBuilder.visitProgram(ASTBuilder.java:12)\n\tat\
    \ Compiler.Parser.MxstarParser$ProgramContext.accept(MxstarParser.java:130)\n\t\
    at org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Compiler.Main.main(Main.java:25)\n", stdout: '', verdict: Wrong Answer}
- {case: ./codeforces-package/122A.mx, stage: semantic, stderr: '', stdout: '', verdict: Accepted}
- {case: ./codeforces-package/158A.mx, stage: semantic, stderr: 'line 14:40 extraneous
    input '';'' expecting {''{'', ''('', ''++'', ''--'', ''+'', ''-'', ''!'', ''~'',
    ''int'', ''bool'', ''string'', ''if'', ''for'', ''while'', ''break'', ''continue'',
    ''return'', ''new'', ''this'', IntegerConstant, StringConstant, NullConstant,
    BoolConstant, Identifier}

    ', stdout: '', verdict: Accepted}
- {case: ./codeforces-package/231A.mx, stage: semantic, stderr: '', stdout: '', verdict: Accepted}
- {case: ./codeforces-package/263A.mx, stage: semantic, stderr: '', stdout: '', verdict: Accepted}
